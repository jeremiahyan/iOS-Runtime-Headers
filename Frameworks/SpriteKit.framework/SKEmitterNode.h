/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SpriteKit.framework/SpriteKit
 */

@interface SKEmitterNode : SKNode {
    SKKeyframeSequence *_alphaSequence;
    SKKeyframeSequence *_colorBlendSequence;
    SKKeyframeSequence *_colorSequence;
    struct SKCEmitterSprite { int (**x1)(); struct list<SKCAction *, std::__1::allocator<SKCAction *> > { struct __list_node_base<SKCAction *, void *> { struct __list_node<SKCAction *, void *> {} *x_1_2_1; struct __list_node<SKCAction *, void *> {} *x_1_2_2; } x_2_1_1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCAction *, void *> > > { unsigned long x_2_2_1; } x_2_1_2; } x2; struct shared_ptr<PKPath> { struct PKPath {} *x_3_1_1; struct __shared_weak_count {} *x_3_1_2; } x3; id x4; /* Warning: Unrecognized filer type: '1' using 'void*' */ void*x5; unsigned int x6 : 1; unsigned int x7 : 1; unsigned int x8 : 1; unsigned int x9 : 1; unsigned int x10 : 1; unsigned int x11 : 1; unsigned int x12 : 1; unsigned int x13 : 1; unsigned int x14 : 1; unsigned int x15 : 1; unsigned int x16 : 1; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; unsigned int x24 : 1; unsigned int x25 : 1; unsigned int x26 : 1; unsigned int x27 : 1; unsigned int x28 : 1; unsigned int x29 : 1; unsigned int x30 : 1; bool x31; unsigned int x32 : 1; unsigned int x33 : 1; unsigned int x34 : 1; unsigned int x35 : 1; unsigned int x36 : 1; unsigned int x37 : 1; unsigned int x38 : 1; unsigned int x39 : 1; unsigned int x40 : 1; unsigned int x41 : 1; float x42; struct SKCSprite {} *x43; unsigned int x44; unsigned int x45; unsigned int x46; id x47; bool x48; bool x49; struct __CVBuffer {} *x50; struct __CVBuffer {} *x51; struct __CVOpenGLESTextureCache {} *x52; id x53; id x54; unsigned int x55; unsigned int x56; struct { float x_57_1_1; float x_57_1_2; } x57; struct { float x_58_1_1; float x_58_1_2; } x58; struct { float x_59_1_1; float x_59_1_2; } x59; struct { struct { float x_1_2_1; float x_1_2_2; } x_60_1_1; struct { float x_2_2_1; float x_2_2_2; } x_60_1_2; } x60; struct __CVBuffer {} *x61; struct __CVBuffer {} *x62; bool x63; struct { struct { union _GLKVector4 { struct { float x_1_4_1; float x_1_4_2; float x_1_4_3; float x_1_4_4; } x_1_3_1; struct { float x_2_4_1; float x_2_4_2; float x_2_4_3; float x_2_4_4; } x_1_3_2; struct { float x_3_4_1; float x_3_4_2; float x_3_4_3; float x_3_4_4; } x_1_3_3; float x_1_3_4[4]; } x_1_2_1; unsigned char x_1_2_2[4]; float x_1_2_3[3]; } x_64_1_1[4]; } x64; struct { /* ? */ } *x65; struct { /* ? */ } *x66; struct { struct { float x_1_2_1; float x_1_2_2; } x_67_1_1; struct { float x_2_2_1; float x_2_2_2; } x_67_1_2; struct { float x_3_2_1; float x_3_2_2; } x_67_1_3; struct { float x_4_2_1; float x_4_2_2; } x_67_1_4; } x67; struct { struct { float x_1_2_1; float x_1_2_2; } x_68_1_1; struct { float x_2_2_1; float x_2_2_2; } x_68_1_2; } x68; int x69; struct { struct { float x_1_2_1; float x_1_2_2; } x_70_1_1; struct { float x_2_2_1; float x_2_2_2; } x_70_1_2; } x70; struct SKCSprite {} *x71; union _GLKMatrix4 { struct { float x_1_2_1; float x_1_2_2; float x_1_2_3; float x_1_2_4; float x_1_2_5; float x_1_2_6; float x_1_2_7; float x_1_2_8; float x_1_2_9; float x_1_2_10; float x_1_2_11; float x_1_2_12; float x_1_2_13; float x_1_2_14; float x_1_2_15; float x_1_2_16; } x_72_1_1; float x_72_1_2[16]; } x72; struct list<SKCSprite *, std::__1::allocator<SKCSprite *> > { struct __list_node_base<SKCSprite *, void *> { struct __list_node<SKCSprite *, void *> {} *x_1_2_1; struct __list_node<SKCSprite *, void *> {} *x_1_2_2; } x_73_1_1; struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SKCSprite *, void *> > > { unsigned long x_2_2_1; } x_73_1_2; } x73; struct set<SKCSprite *, std::__1::less<SKCSprite *>, std::__1::allocator<SKCSprite *> > {} *x74; struct list<SKCSprite *, std::__1::allocator<SKCSprite *> > {} *x75; unsigned int x76; unsigned int x77; bool x78; struct set<SKCSprite *, std::__1::less<SKCSprite *>, std::__1::allocator<SKCSprite *> > { struct __tree<SKCSprite *, std::__1::less<SKCSprite *>, std::__1::allocator<SKCSprite *> > { struct __tree_node<SKCSprite *, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<SKCSprite *, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::less<SKCSprite *> > { unsigned long x_3_3_1; } x_1_2_3; } x_79_1_1; } x79; struct unordered_set<SKCAction *, std::__1::hash<SKCAction *>, std::__1::equal_to<SKCAction *>, std::__1::allocator<SKCAction *> > { struct __hash_table<SKCAction *, std::__1::hash<SKCAction *>, std::__1::equal_to<SKCAction *>, std::__1::allocator<SKCAction *> > { struct unique_ptr<std::__1::__hash_node<SKCAction *, void *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<SKCAction *, void *> *> > > { struct __compressed_pair<std::__1::__hash_node<SKCAction *, void *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<SKCAction *, void *> *> > > { struct __hash_node<SKCAction *, void *> {} **x_1_4_1; struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<SKCAction *, void *> *> > { struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<SKCAction *, void *> *> > { unsigned long x_1_6_1; } x_2_5_1; } x_1_4_2; } x_1_3_1; } x_1_2_1; struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<SKCAction *, void *> *>, std::__1::allocator<std::__1::__hash_node<SKCAction *, void *> > > { struct __hash_node_base<std::__1::__hash_node<SKCAction *, void *> *> { struct __hash_node<SKCAction *, void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::hash<SKCAction *> > { unsigned long x_3_3_1; } x_1_2_3; struct __compressed_pair<float, std::__1::equal_to<SKCAction *> > { float x_4_3_1; } x_1_2_4; } x_80_1_1; } x80; float x81; float x82; float x83; id x84; void*x85; void*x86; float x87; float x88; } *_eSprite;
    SKKeyframeSequence *_fieldInfluenceSequence;
    SKTexture *_particleTexture;
    SKKeyframeSequence *_rotationSequence;
    SKKeyframeSequence *_scaleSequence;
    SKNode *_target;
}

@property (nonatomic) float emissionAngle;
@property (nonatomic) float emissionAngleRange;
@property (nonatomic) unsigned int fieldBitMask;
@property (nonatomic) unsigned int numParticlesToEmit;
@property (nonatomic, copy) SKAction *particleAction;
@property (nonatomic) float particleAlpha;
@property (nonatomic) float particleAlphaRange;
@property (nonatomic, retain) SKKeyframeSequence *particleAlphaSequence;
@property (nonatomic) float particleAlphaSpeed;
@property (nonatomic) float particleBirthRate;
@property (nonatomic) int particleBlendMode;
@property (nonatomic, retain) UIColor *particleColor;
@property (nonatomic) float particleColorAlphaRange;
@property (nonatomic) float particleColorAlphaSpeed;
@property (nonatomic) float particleColorBlendFactor;
@property (nonatomic) float particleColorBlendFactorRange;
@property (nonatomic, retain) SKKeyframeSequence *particleColorBlendFactorSequence;
@property (nonatomic) float particleColorBlendFactorSpeed;
@property (nonatomic) float particleColorBlueRange;
@property (nonatomic) float particleColorBlueSpeed;
@property (nonatomic) float particleColorGreenRange;
@property (nonatomic) float particleColorGreenSpeed;
@property (nonatomic) float particleColorRedRange;
@property (nonatomic) float particleColorRedSpeed;
@property (nonatomic, retain) SKKeyframeSequence *particleColorSequence;
@property (nonatomic) float particleLifetime;
@property (nonatomic) float particleLifetimeRange;
@property (nonatomic) struct CGPoint { float x1; float x2; } particlePosition;
@property (nonatomic) struct CGVector { float x1; float x2; } particlePositionRange;
@property (nonatomic) float particleRotation;
@property (nonatomic) float particleRotationRange;
@property (nonatomic) float particleRotationSpeed;
@property (nonatomic) float particleScale;
@property (nonatomic) float particleScaleRange;
@property (nonatomic, retain) SKKeyframeSequence *particleScaleSequence;
@property (nonatomic) float particleScaleSpeed;
@property (nonatomic) struct CGSize { float x1; float x2; } particleSize;
@property (nonatomic) float particleSpeed;
@property (nonatomic) float particleSpeedRange;
@property (nonatomic, retain) SKTexture *particleTexture;
@property (nonatomic) float particleZPosition;
@property (nonatomic) float particleZPositionRange;
@property (nonatomic) float particleZPositionSpeed;
@property (nonatomic, retain) SKShader *shader;
@property (nonatomic) SKNode *targetNode;
@property (nonatomic) float xAcceleration;
@property (nonatomic) float yAcceleration;

- (void).cxx_destruct;
- (void)advanceSimulationTime:(double)arg1;
- (BOOL)containsPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (BOOL)densityBased;
- (id)description;
- (float)emissionAngle;
- (float)emissionAngleRange;
- (float)emissionDistance;
- (float)emissionDistanceRange;
- (void)encodeWithCoder:(id)arg1;
- (unsigned int)fieldBitMask;
- (id)fieldInfluenceSequence;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (BOOL)isEqualToNode:(id)arg1;
- (unsigned int)numParticlesToEmit;
- (id)particleAction;
- (float)particleAlpha;
- (float)particleAlphaRange;
- (id)particleAlphaSequence;
- (float)particleAlphaSpeed;
- (float)particleBirthRate;
- (int)particleBlendMode;
- (id)particleColor;
- (float)particleColorAlphaRange;
- (float)particleColorAlphaSpeed;
- (float)particleColorBlendFactor;
- (float)particleColorBlendFactorRange;
- (id)particleColorBlendFactorSequence;
- (float)particleColorBlendFactorSpeed;
- (float)particleColorBlueRange;
- (float)particleColorBlueSpeed;
- (float)particleColorGreenRange;
- (float)particleColorGreenSpeed;
- (float)particleColorRedRange;
- (float)particleColorRedSpeed;
- (id)particleColorSequence;
- (float)particleDensity;
- (float)particleLifetime;
- (float)particleLifetimeRange;
- (struct CGPoint { float x1; float x2; })particlePosition;
- (struct CGVector { float x1; float x2; })particlePositionRange;
- (float)particleRotation;
- (float)particleRotationRange;
- (id)particleRotationSequence;
- (float)particleRotationSpeed;
- (float)particleScale;
- (float)particleScaleRange;
- (id)particleScaleSequence;
- (float)particleScaleSpeed;
- (struct CGSize { float x1; float x2; })particleSize;
- (float)particleSpeed;
- (float)particleSpeedRange;
- (id)particleTexture;
- (float)particleZPosition;
- (float)particleZPositionRange;
- (float)particleZPositionSpeed;
- (id)physicsWorld;
- (void)resetSimulation;
- (void)setDensityBased:(BOOL)arg1;
- (void)setEmissionAngle:(float)arg1;
- (void)setEmissionAngleRange:(float)arg1;
- (void)setEmissionDistance:(float)arg1;
- (void)setEmissionDistanceRange:(float)arg1;
- (void)setFieldBitMask:(unsigned int)arg1;
- (void)setFieldInfluenceSequence:(id)arg1;
- (void)setNumParticlesToEmit:(unsigned int)arg1;
- (void)setParticleAction:(id)arg1;
- (void)setParticleAlpha:(float)arg1;
- (void)setParticleAlphaRange:(float)arg1;
- (void)setParticleAlphaSequence:(id)arg1;
- (void)setParticleAlphaSpeed:(float)arg1;
- (void)setParticleBirthRate:(float)arg1;
- (void)setParticleBlendMode:(int)arg1;
- (void)setParticleColor:(id)arg1;
- (void)setParticleColorAlphaRange:(float)arg1;
- (void)setParticleColorAlphaSpeed:(float)arg1;
- (void)setParticleColorBlendFactor:(float)arg1;
- (void)setParticleColorBlendFactorRange:(float)arg1;
- (void)setParticleColorBlendFactorSequence:(id)arg1;
- (void)setParticleColorBlendFactorSpeed:(float)arg1;
- (void)setParticleColorBlueRange:(float)arg1;
- (void)setParticleColorBlueSpeed:(float)arg1;
- (void)setParticleColorGreenRange:(float)arg1;
- (void)setParticleColorGreenSpeed:(float)arg1;
- (void)setParticleColorRedRange:(float)arg1;
- (void)setParticleColorRedSpeed:(float)arg1;
- (void)setParticleColorSequence:(id)arg1;
- (void)setParticleDensity:(float)arg1;
- (void)setParticleLifetime:(float)arg1;
- (void)setParticleLifetimeRange:(float)arg1;
- (void)setParticlePosition:(struct CGPoint { float x1; float x2; })arg1;
- (void)setParticlePositionRange:(struct CGVector { float x1; float x2; })arg1;
- (void)setParticleRotation:(float)arg1;
- (void)setParticleRotationRange:(float)arg1;
- (void)setParticleRotationSequence:(id)arg1;
- (void)setParticleRotationSpeed:(float)arg1;
- (void)setParticleScale:(float)arg1;
- (void)setParticleScaleRange:(float)arg1;
- (void)setParticleScaleSequence:(id)arg1;
- (void)setParticleScaleSpeed:(float)arg1;
- (void)setParticleSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setParticleSpeed:(float)arg1;
- (void)setParticleSpeedRange:(float)arg1;
- (void)setParticleTexture:(id)arg1;
- (void)setParticleZPosition:(float)arg1;
- (void)setParticleZPositionRange:(float)arg1;
- (void)setParticleZPositionSpeed:(float)arg1;
- (void)setPaused:(BOOL)arg1;
- (void)setPhysicsWorld:(id)arg1;
- (void)setShader:(id)arg1;
- (void)setTargetNode:(id)arg1;
- (void)setXAcceleration:(float)arg1;
- (void)setYAcceleration:(float)arg1;
- (id)shader;
- (id)targetNode;
- (float)xAcceleration;
- (float)yAcceleration;

@end
