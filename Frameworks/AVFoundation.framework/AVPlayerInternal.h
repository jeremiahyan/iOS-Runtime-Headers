/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

@interface AVPlayerInternal : NSObject {
    AVWeakKeyValueObserverProxy *KVOProxy;
    BOOL allowsOutOfBandTextTrackRendering;
    AVAudioSessionMediaPlayerOnly *audioSessionMediaPlayerOnly;
    BOOL autoSwitchStreamVariants;
    NSHashTable *avPlayerLayers;
    struct CGSize { 
        float width; 
        float height; 
    } cachedDisplaySize;
    NSDictionary *cachedFigMediaSelectionCriteriaProperty;
    NSMutableSet *closedCaptionLayers;
    AVPlayerItem *currentItem;
    NSArray *displaysUsedForPlayback;
    NSError *error;
    NSArray *expectedAssetTypes;
    NSString *externalPlaybackVideoGravity;
    NSObject<OS_dispatch_queue> *figConfigurationQueue;
    struct OpaqueCMClock { } *figMasterClock;
    struct OpaqueFigPlaybackItem { } *figPlaybackItemToIdentifyNextCurrentItem;
    struct OpaqueFigPlayer { } *figPlayer;
    BOOL hadAssociatedOnscreenPlayerLayerWhenSuspended;
    BOOL hostApplicationInForeground;
    BOOL iapdExtendedModeIsActive;
    NSMutableSet *items;
    NSObject<OS_dispatch_queue> *ivarAccessQueue;
    AVPlayerItem *lastItem;
    NSObject<OS_dispatch_queue> *layersQ;
    BOOL logPerformanceData;
    BOOL needsToCreateFigPlayer;
    int nextPrerollIDToGenerate;
    NSMutableDictionary *pendingFigPlayerProperties;
    int pendingPrerollID;
    AVPixelBufferAttributeMediator *pixelBufferAttributeMediator;
    BOOL preparesItemsForPlaybackAsynchronously;
    id /* block */ prerollCompletionHandler;
    struct OpaqueFigSimpleMutex { } *prerollIDMutex;
    AVPropertyStorage *propertyStorage;
    struct OpaqueCMTimebase { } *proxyTimebase;
    BOOL reevaluateBackgroundPlayback;
    NSObject<OS_dispatch_queue> *stateDispatchQueue;
    int status;
    NSMutableSet *subtitleLayers;
    NSDictionary *vibrationPattern;
    struct __CFDictionary { } *videoLayers;
    AVWeakReference *weakReference;
}

@end
