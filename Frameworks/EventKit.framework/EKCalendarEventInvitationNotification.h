/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/EventKit.framework/EventKit
 */

@interface EKCalendarEventInvitationNotification : EKCalendarNotification {
    BOOL _allDay;
    BOOL _attendeeReplyChanged;
    NSArray *_attendees;
    BOOL _dateChanged;
    NSDate *_endDate;
    BOOL _hasRecurrenceRules;
    NSString *_location;
    BOOL _locationChanged;
    int _participationStatus;
    NSDate *_participationStatusModifiedDate;
    NSDate *_startDate;
    NSDate *_startDateForNextOccurrence;
    int _status;
    BOOL _timeChanged;
}

@property (getter=isAllDay, nonatomic) BOOL allDay;
@property (nonatomic) BOOL attendeeReplyChanged;
@property (nonatomic, retain) NSArray *attendees;
@property (nonatomic) BOOL dateChanged;
@property (nonatomic, retain) NSDate *endDate;
@property (nonatomic) BOOL hasRecurrenceRules;
@property (nonatomic, retain) NSString *location;
@property (nonatomic) BOOL locationChanged;
@property (nonatomic) int participationStatus;
@property (nonatomic, retain) NSDate *participationStatusModifiedDate;
@property (nonatomic, retain) NSDate *startDate;
@property (nonatomic, retain) NSDate *startDateForNextOccurrence;
@property (nonatomic) int status;
@property (nonatomic) BOOL timeChanged;

- (BOOL)attendeeReplyChanged;
- (id)attendees;
- (BOOL)dateChanged;
- (void)dealloc;
- (id)endDate;
- (id)eventFromEventStore:(id)arg1;
- (BOOL)hasRecurrenceRules;
- (id)initWithEvent:(id)arg1;
- (BOOL)isAllDay;
- (id)location;
- (BOOL)locationChanged;
- (int)participationStatus;
- (id)participationStatusModifiedDate;
- (void)setAllDay:(BOOL)arg1;
- (void)setAttendeeReplyChanged:(BOOL)arg1;
- (void)setAttendees:(id)arg1;
- (void)setDateChanged:(BOOL)arg1;
- (void)setEndDate:(id)arg1;
- (void)setHasRecurrenceRules:(BOOL)arg1;
- (void)setLocation:(id)arg1;
- (void)setLocationChanged:(BOOL)arg1;
- (void)setParticipationStatus:(int)arg1;
- (void)setParticipationStatusModifiedDate:(id)arg1;
- (void)setStartDate:(id)arg1;
- (void)setStartDateForNextOccurrence:(id)arg1;
- (void)setStatus:(int)arg1;
- (void)setTimeChanged:(BOOL)arg1;
- (id)startDate;
- (id)startDateForNextOccurrence;
- (int)status;
- (BOOL)timeChanged;

@end
