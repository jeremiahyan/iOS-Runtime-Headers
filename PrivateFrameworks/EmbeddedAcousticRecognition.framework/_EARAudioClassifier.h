/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/EmbeddedAcousticRecognition.framework/EmbeddedAcousticRecognition
 */

@interface _EARAudioClassifier : NSObject {
    int _leftContext;
    struct Nnet { 
        struct vector<kaldi::nnet1::Component *, std::__1::allocator<kaldi::nnet1::Component *> > { 
            struct Component {} **__begin_; 
            struct Component {} **__end_; 
            struct __compressed_pair<kaldi::nnet1::Component **, std::__1::allocator<kaldi::nnet1::Component *> > { 
                struct Component {} **__first_; 
            } __end_cap_; 
        } components_; 
        struct vector<kaldi::CuMatrix<float>, std::__1::allocator<kaldi::CuMatrix<float> > > { 
            struct CuMatrix<float> {} *__begin_; 
            struct CuMatrix<float> {} *__end_; 
            struct __compressed_pair<kaldi::CuMatrix<float> *, std::__1::allocator<kaldi::CuMatrix<float> > > { 
                struct CuMatrix<float> {} *__first_; 
            } __end_cap_; 
        } propagate_buf_; 
        struct vector<kaldi::CuMatrix<float>, std::__1::allocator<kaldi::CuMatrix<float> > > { 
            struct CuMatrix<float> {} *__begin_; 
            struct CuMatrix<float> {} *__end_; 
            struct __compressed_pair<kaldi::CuMatrix<float> *, std::__1::allocator<kaldi::CuMatrix<float> > > { 
                struct CuMatrix<float> {} *__first_; 
            } __end_cap_; 
        } backpropagate_buf_; 
        struct NnetTrainOptions { 
            float learn_rate; 
            float momentum; 
            float l2_penalty; 
            float l1_penalty; 
        } opts_; 
    } _nnet;
    NSObject<OS_dispatch_queue> *_queue;
    int _rightContext;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)initWithContentsOfNNetFile:(id)arg1;
- (id)initWithContentsOfNNetFile:(id)arg1 leftContext:(int)arg2 rightContext:(int)arg3;
- (id)startedClassificationSessionWithDelegate:(id)arg1 sampleRate:(float)arg2;

@end
