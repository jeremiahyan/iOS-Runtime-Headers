/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PowerlogCore.framework/PowerlogCore
 */

@interface PLRail : PLOperator {
    BOOL _cacheOn;
    NSArray *_cacheResults;
    struct _PLTimeIntervalRange { 
        double location; 
        double length; 
    } _cacheTimeRange;
    BOOL _isNegativePowerSupported;
    PLEntry *_lastSnapshot;
    BOOL _logRail;
    short _railDirection;
    NSString *_railName;
    double _selfAdjustedSafeTimeForModeling;
}

@property BOOL cacheOn;
@property (retain) NSArray *cacheResults;
@property struct _PLTimeIntervalRange { double x1; double x2; } cacheTimeRange;
@property (readonly) BOOL isNegativePowerSupported;
@property (nonatomic, retain) PLEntry *lastSnapshot;
@property BOOL logRail;
@property (readonly) short railDirection;
@property (readonly, retain) NSString *railName;
@property (readonly) double selfAdjustedSafeTimeForModeling;

+ (id)entryEventNoneDefinitionRail;
+ (id)entryEventNoneDefinitions;
+ (double)getEnergyInRail:(id)arg1 inTimeRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg2;
+ (id)getSnappedRailName:(id)arg1;
+ (BOOL)isSnapRail:(id)arg1;
+ (id)railFromRailName:(id)arg1;
+ (void)safeGuardAllRails;
+ (id)snapRailFromRailName:(id)arg1;

- (void).cxx_destruct;
- (void)addSnapshot:(id)arg1 withPower:(double)arg2;
- (void)batchAddSnapshots:(id)arg1;
- (BOOL)cacheOn;
- (void)cacheRailDataForTimeInterval:(struct _PLTimeIntervalRange { double x1; double x2; })arg1;
- (id)cacheResults;
- (struct _PLTimeIntervalRange { double x1; double x2; })cacheTimeRange;
- (void)clearCache;
- (id)generateSnapshotEntry:(id)arg1 withPower:(double)arg2;
- (double)getEnergyInRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg1;
- (id)getSnapshotTimeInRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg1;
- (id)getSnapshotsInRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg1;
- (void)initOperatorDependancies;
- (id)initWithName:(id)arg1 withRailDirection:(short)arg2 withNegativePowerSupport:(BOOL)arg3 isLoggingOnByDefault:(BOOL)arg4;
- (BOOL)isNegativePowerSupported;
- (BOOL)isRailPowerEqual:(double)arg1 withOtherPower:(double)arg2;
- (id)lastSnapshot;
- (void)logCacheStats:(id)arg1;
- (BOOL)logRail;
- (short)railDirection;
- (id)railName;
- (double)safeTimeForModeling;
- (double)selfAdjustedSafeTimeForModeling;
- (void)setCacheOn:(BOOL)arg1;
- (void)setCacheResults:(id)arg1;
- (void)setCacheTimeRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg1;
- (void)setLastSnapshot:(id)arg1;
- (void)setLogRail:(BOOL)arg1;
- (double)timeOfLastSnapshot;
- (id)trimBatchSnapShots:(id)arg1;
- (id)trimmingConditionsForRolloverAtDate:(id)arg1;
- (BOOL)useCachedDataForTimeInterval:(struct _PLTimeIntervalRange { double x1; double x2; })arg1;

@end
