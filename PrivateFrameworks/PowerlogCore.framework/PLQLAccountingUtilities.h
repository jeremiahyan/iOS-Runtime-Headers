/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PowerlogCore.framework/PowerlogCore
 */

@interface PLQLAccountingUtilities : NSObject

+ (short)BBConditionInRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg1;
+ (BOOL)GPSOnInRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg1;
+ (id)appsInAirplayInRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg1;
+ (id)appsInForegroundInRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg1;
+ (void)batchAndFlushSnapshotsForAllRailAdditions:(id)arg1;
+ (id)createAccountingBucketsForAccountingEvents:(id)arg1 inRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg2;
+ (id)fuzzSnapRanges:(id)arg1;
+ (id)fuzzSnapRangesTake2:(id)arg1;
+ (id)generateSnapRangesForRails:(id)arg1 inTimeRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg2 withBoundaries:(id)arg3;
+ (void)generateSnappedRails:(id)arg1 withRails:(id)arg2 inTimeRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg3 withBoundaries:(id)arg4 withLoggingArray:(id)arg5;
+ (id)genericAccountingQuerySetup:(id)arg1 withAGName:(id)arg2 withRails:(id)arg3 withAggKey:(id)arg4 withQueryType:(short)arg5;
+ (id)genericAccountingQuerySetup:(id)arg1 withAGName:(id)arg2 withRailsToBeAdded:(id)arg3 withRailsToBeSubtracted:(id)arg4 withAggKey:(id)arg5 withQueryType:(short)arg6;
+ (id)genericPostAccountingQueryEventPointSetup:(id)arg1 withAGName:(id)arg2 withRails:(id)arg3 withAggKey:(id)arg4 withQueryType:(short)arg5;
+ (id)genericPostAccountingQuerySetup:(id)arg1 withAGName:(id)arg2 withRails:(id)arg3 withAggKey:(id)arg4 withQueryType:(short)arg5;
+ (BOOL)isAirdropInRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg1;
+ (BOOL)isAirplayMirroringInRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg1;
+ (BOOL)isAudioOnInRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg1;
+ (BOOL)isScreenOnInRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg1;
+ (void)printRangeArray:(id)arg1;
+ (id)safeTimeForAccounting:(id)arg1;
+ (id)safeTimeForModelingForRails:(id)arg1 withSnap:(BOOL)arg2 withGasGauge:(BOOL)arg3;
+ (double)sumOfAllRails:(id)arg1 inRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg2 withSnap:(BOOL)arg3;
+ (double)totalEnergyInAccountedBuckets:(id)arg1;
+ (BOOL)wasAppInBackgroundInRange:(struct _PLTimeIntervalRange { double x1; double x2; })arg1 bundleID:(id)arg2;

@end
