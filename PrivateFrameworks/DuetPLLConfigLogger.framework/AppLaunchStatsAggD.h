/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/DuetPLLConfigLogger.framework/DuetPLLConfigLogger
 */

@interface AppLaunchStatsAggD : NSObject {
    int BGReportToken;
    NSObject<OS_dispatch_queue> *aggDQueue;
    id /* block */ appisFetchable;
    long long avgDownloadsize;
    long long avgPWConsumed;
    unsigned long blameReasons;
    bool buildLaunchStats;
    NSDate *cycleStart;
    int fetchAppFiltered;
    int fetchAttempt;
    int fetchDataCount;
    long long fetchDataTotal;
    int fetchDenied;
    int fetchDeniedWithReasons;
    int fetchFailedCount;
    int fetchGiven;
    int fetchPWTotal;
    int fetchUpdateTimeCount;
    long long fetchUpdateTimeTotal;
    int forceRelease;
    int hasStats;
    NSMutableDictionary *launchDict;
    fetchDenyEntry *mostRecentDeny;
    fetchFilterEntry *mostRecentFilter;
    unsigned long long numPrewarms;
    unsigned long long numWarmedLaunches;
    NSMutableArray *pastCycle;
    NSMutableDictionary *previousPrewarmDict;
    NSMutableDictionary *prewarmCountDict;
    NSMutableDictionary *prewarmDict;
    int prewarmEligibleZone;
    int prewarmHits;
    int prewarmMiss;
    int prewarmZoneCounts;
    int pushAttempt;
    int pushDenied;
    int pushDeniedReasons;
    int topNZoneCounts;
    int totalBGDownloads;
    long long totalNonDiscDownload;
    long long totalNonDiscEnergy;
    int zoneCounts;
}

@property (nonatomic, readonly) NSDate *cycleStart;
@property (nonatomic, retain) NSMutableArray *pastCycle;

+ (id)sharedInstance;

- (void).cxx_destruct;
- (void)accountPredatePrewarm:(id)arg1 prevDay:(id)arg2 launch:(int)arg3 launchvalue:(int)arg4 prewarmvalue:(int)arg5 diff:(int)arg6 result:(int*)arg7;
- (bool)accountYesterday:(id)arg1 atzone:(int)arg2 launchVal:(int)arg3 result:(int*)arg4;
- (void)appFGLaunch:(id)arg1;
- (void)appPrewarm:(id)arg1 type:(int)arg2;
- (void)backgroundSucceeds:(long long)arg1 withPW:(long long)arg2;
- (void)calculatePrewarmHitMiss:(id)arg1 launch:(id)arg2;
- (id)cycleStart;
- (void)dealloc;
- (int)distanceToLastPrewarm:(id)arg1 prevDay:(id)arg2 currentSlot:(int)arg3 currentoffset:(int)arg4;
- (void)fetchAttemptIncrement;
- (void)fetchCountUpdate:(int)arg1;
- (void)fetchDataCount:(int)arg1;
- (void)fetchDenied:(int)arg1;
- (void)fetchDeniedBecause:(bool)arg1 withPWBudget:(bool)arg2 inwifi:(bool)arg3 incell:(bool)arg4 ignorePoorCell:(bool)arg5 incall:(bool)arg6 thermal:(bool)arg7 hascell:(bool)arg8 haswifi:(bool)arg9;
- (void)fetchFailedUpdate;
- (void)fetchFiltered:(int)arg1;
- (void)fetchPWCount:(int)arg1;
- (void)fetchTimeUpdate:(long long)arg1;
- (void)forceReleaseCount;
- (id)init;
- (void)mostRecentDenyResult:(int)arg1;
- (void)mostRecentFilterResult:(id)arg1;
- (void)newCycleWithApps:(id)arg1;
- (void)nonDiscretionaryAdd:(unsigned long long)arg1 withPW:(unsigned long long)arg2;
- (id)pastCycle;
- (void)populatePredictZones:(int)arg1 filter:(bool)arg2 callback:(id /* block */)arg3;
- (void)populatePrewarmZones:(int)arg1 callback:(id /* block */)arg2;
- (void)pushAttemptIncrement:(int)arg1;
- (void)pushDenied:(int)arg1;
- (void)pushDeniedBecause:(bool)arg1 withPWBudget:(bool)arg2 inwifi:(bool)arg3 incell:(bool)arg4 ignorePoorCell:(bool)arg5;
- (void)replacePredictionAtZone:(id)arg1 zoneid:(int)arg2;
- (void)searchBlame:(id)arg1 inzone:(int)arg2 inminute:(int)arg3;
- (void)setCollectLaunchStats;
- (void)setFetchCapableCheck:(id /* block */)arg1;
- (void)setPastCycle:(id)arg1;
- (void)uploadData;

@end
