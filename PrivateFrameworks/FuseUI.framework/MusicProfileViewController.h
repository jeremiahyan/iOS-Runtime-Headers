/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI
 */

@interface MusicProfileViewController : UIViewController <MusicClientContextConsuming, MusicJSNativeViewControllerFactory, MusicJSProfileNativeViewControllerDelegate, MusicProfileDetailViewDelegate, MusicProfileSplitMainViewControllerDelegate, SKUINavigationBarDisplayConfiguring, SKUIProxyScrollViewDelegate> {
    MPMediaItemCollection *_artistMediaItemCollection;
    UIView *_backgroundView;
    BOOL _biographyNeedsContent;
    MusicClientContext *_clientContext;
    MusicProfileDetailView *_detailsView;
    BOOL _didDispatchLoadEvent;
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    } _externalContentInset;
    NSString *_followerCountText;
    NSString *_followersText;
    UIView *_hairlineView;
    MusicInteractiveBlurringView *_headerBlurringView;
    float _headerHeight;
    MusicMediaUberHeaderLegibilityOverlayView *_headerLegibilityOverlayView;
    UIView *_headerMultiplyTintView;
    UIColor *_headerRadialGradientColor;
    UIColor *_headerTintColor;
    MusicProfileHeaderView *_headerView;
    BOOL _isAdminEnabled;
    BOOL _isAlbumArtist;
    BOOL _isBiographyInitiallyAvailable;
    BOOL _isCollapsed;
    BOOL _isContainedWithinSplitViewDetail;
    BOOL _isHandlingScrollViewUpdate;
    BOOL _isHeaderBlurringViewTransitioning;
    BOOL _isWaitingToPushProfileBiographyView;
    MusicNavigationBarTitleContainerView *_navigationBarTitleContainerView;
    NSString *_navigationTitle;
    int _numberOfFollowers;
    int _options;
    <MusicEntityProviding> *_profileEntityProvider;
    MusicEntityValueContext *_profileEntityValueContext;
    unsigned int _profileType;
    SKUIProxyScrollView *_proxyScrollView;
    NSString *_segmentIdentifierNeedingContent;
    BOOL _shouldUseAvailableContent;
    BOOL _socialHidden;
    MusicProfileSplitMainViewController *_splitDetailViewController;
    MusicProfileSplitMainViewController *_splitMainViewController;
    NSMapTable *_splitScrollViewToScrollingContext;
    NSArray *_splitScrollViews;
    NSNumber *_storeAdamID;
    MPArtworkCatalog *_uberImageArtworkCatalog;
    MusicUberArtworkView *_uberImageView;
    float _uberImageViewConfigurationDisplayScale;
    struct CGSize { 
        float width; 
        float height; 
    } _uberImageViewConfigurationSize;
    BOOL _useNoArtworkStyle;
    BOOL _usesLightContentOverHeader;
}

@property (nonatomic, retain) SKUIClientContext *clientContext;
@property (nonatomic, readonly) UIScrollView *currentPrimaryScrollView;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (nonatomic) int options;
@property (nonatomic) BOOL shouldAutomaticallySelectMyMusicSegment;
@property (nonatomic, readonly) MusicProfileSplitMainViewController *splitMainViewController;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_accessBiographyDocumentUsingBlock:(id /* block */)arg1;
- (BOOL)_calculateCollapsed;
- (float)_calculateDisappearanceProgressForHeaderHeight:(float)arg1;
- (void)_checkAdminPermission;
- (void)_checkAdminPermissionForCurrentProfile;
- (id)_currentPrimaryScrollView;
- (void)_dispatchNeedsBiographyDocument;
- (void)_dispatchNeedsContentForSegmentWithIdentifier:(id)arg1;
- (float)_effectiveHeaderHeightForContentOffset:(struct CGPoint { float x1; float x2; })arg1 externalScrollViewContentInset:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg2;
- (BOOL)_hasVisibleNavigationBar;
- (void)_initializeHeaderTintColor;
- (float)_minimumHeaderHeight;
- (void)_profileEntityProviderDidInvalidateNotification:(id)arg1;
- (void)_pushBiographyDocument:(id)arg1 options:(id)arg2;
- (void)_reconfigureProfileArtwork;
- (void)_registerForNotificationsForProfileEntityProvider:(id)arg1;
- (id)_scrollingContextForSplitScrollView:(id)arg1;
- (BOOL)_shouldShowBiographyDetailSplitView;
- (id)_splitDetailContentScrollView;
- (id)_splitDetailViewController;
- (id)_splitMainContentScrollView;
- (id)_splitMainViewController;
- (void)_unregisterForNotificationsForProfileEntityProvider:(id)arg1;
- (void)_updateFollowCount:(int)arg1;
- (void)_updateFollowText;
- (void)_updateFollowText:(BOOL)arg1 animated:(BOOL)arg2;
- (void)_updateHeaderColors;
- (void)_updateHeaderColorsForArtworkBackgroundColor:(id)arg1 allowsBarsAppearanceUpdate:(BOOL)arg2;
- (void)_updateHeaderViewFrameWithHeaderHeight:(float)arg1;
- (void)_updateNavigationItemTitleView;
- (void)_updateNavigationTitle;
- (void)_updateScrollViewWithOriginatingScrollView:(id)arg1 contentOffset:(struct CGPoint { float x1; float x2; })arg2 shouldAlwaysAdjustContentOffset:(BOOL)arg3;
- (void)_updateScrollViewWithOriginatingScrollView:(id)arg1 shouldAlwaysAdjustContentOffset:(BOOL)arg2;
- (void)_updateSplitChildViewControllers;
- (BOOL)_updateSplitScrollViews;
- (void)_updateToMatchCapabilities;
- (id)clientContext;
- (id)contentScrollView;
- (id)currentPrimaryScrollView;
- (void)dealloc;
- (id)initWithProfileEntityProvider:(id)arg1 isAlbumArtist:(BOOL)arg2 clientContext:(id)arg3 existingJSProfileNativeViewController:(id)arg4 profileType:(unsigned int)arg5;
- (void)jsProfileNativeViewController:(id)arg1 presentBiographyEditorDocument:(id)arg2 options:(id)arg3;
- (void)jsProfileNativeViewController:(id)arg1 presentShareDocument:(id)arg2 options:(id)arg3;
- (void)jsProfileNativeViewController:(id)arg1 setAvailableContentFlags:(id)arg2;
- (void)jsProfileNativeViewController:(id)arg1 setDocument:(id)arg2 options:(id)arg3 forSegmentIdentifier:(id)arg4;
- (void)jsProfileNativeViewController:(id)arg1 setFollowerCountText:(id)arg2 followersText:(id)arg3;
- (void)jsProfileNativeViewController:(id)arg1 setMoreRelatedContentDocument:(id)arg2 options:(id)arg3;
- (void)jsProfileNativeViewController:(id)arg1 setNumberOfFollowers:(int)arg2;
- (void)jsProfileNativeViewController:(id)arg1 setProfileEntityValueProviderData:(id)arg2;
- (void)jsProfileNativeViewController:(id)arg1 setRelatedContentDocument:(id)arg2 options:(id)arg3;
- (void)jsProfileNativeViewController:(id)arg1 setReportingInformation:(id)arg2;
- (void)jsProfileNativeViewController:(id)arg1 setSelectedSegmentIdentifier:(id)arg2;
- (void)jsProfileNativeViewController:(id)arg1 setSocialHidden:(BOOL)arg2;
- (void)jsProfileNativeViewController:(id)arg1 setVisibleSegments:(id)arg2;
- (BOOL)jsProfileNativeViewControllerSupportsRelatedContentDocument:(id)arg1;
- (id)loadJSNativeViewControllerWithAppContext:(id)arg1;
- (BOOL)music_handleUserActivityContext:(id)arg1 containerItem:(id)arg2;
- (id)navigationBarTintColor;
- (int)options;
- (int)preferredStatusBarStyle;
- (BOOL)prefersNavigationBarBackgroundViewHidden;
- (void)profileDetailView:(id)arg1 didUpdateFollowingState:(BOOL)arg2;
- (void)profileDetailViewDidSelectContextualActionsButton:(id)arg1;
- (void)profileDetailViewDidSelectEditButton:(id)arg1;
- (void)profileDetailViewDidSelectShareActionsButton:(id)arg1;
- (void)profileDetailViewDidSelectTitle:(id)arg1;
- (void)profileSplitMainViewController:(id)arg1 contentScrollViewWillEndDraggingWithVelocity:(struct CGPoint { float x1; float x2; })arg2 targetContentOffset:(inout struct CGPoint { float x1; float x2; }*)arg3;
- (void)profileSplitMainViewController:(id)arg1 needsContentForSegmentWithIdentifier:(id)arg2;
- (void)profileSplitMainViewControllerContentScrollViewContentSizeDidChange:(id)arg1;
- (void)profileSplitMainViewControllerContentScrollViewDidScroll:(id)arg1;
- (void)scrollViewDidChangeContentInset:(id)arg1;
- (void)setClientContext:(id)arg1;
- (void)setOptions:(int)arg1;
- (void)setShouldAutomaticallySelectMyMusicSegment:(BOOL)arg1;
- (BOOL)shouldAutomaticallySelectMyMusicSegment;
- (id)splitMainViewController;
- (unsigned int)supportedInterfaceOrientations;
- (void)traitCollectionDidChange:(id)arg1;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)arg1;

@end
