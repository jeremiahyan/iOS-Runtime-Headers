/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/UIFoundation.framework/UIFoundation
 */

@interface _UITextTiledLayer : CALayer {
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _gridBounds;
    NSMutableArray *_reusableTiles;
    struct { 
        unsigned int disableTiling : 1; 
        unsigned int ditchAllTiles : 1; 
        unsigned int suspendLayout : 4; 
    } _tcTiledLayerFlags;
    struct CGSize { 
        float width; 
        float height; 
    } _tileSize;
}

@property (nonatomic) struct CGSize { float x1; float x2; } tileSize;
@property (nonatomic) BOOL usesTiledLayers;

- (void)_buildTilesForRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_cullAndAddLayers:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)_hideAndShowTiles:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 visibleBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (void)_validateTiles;
- (void)dealloc;
- (void)drawDirtyLayer:(id)arg1 intoContext:(struct CGContext { }*)arg2;
- (id)init;
- (void)layoutSublayers;
- (void)renderInContext:(struct CGContext { }*)arg1;
- (void)resumeTiling;
- (void)setBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setTileSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setUsesTiledLayers:(BOOL)arg1;
- (void)suspendTiling;
- (struct CGSize { float x1; float x2; })tileSize;
- (BOOL)usesTiledLayers;

@end
