/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AirPlayReceiver.framework/AirPlayReceiver
 */

@interface AirPlayReceiverPlatform : NSObject <WPAirPlaySoloDelegate> {
    struct { 
        unsigned char flags; 
        unsigned char config; 
        unsigned char ipv4[4]; 
    } _btleAdvertisementData;
    unsigned char _btleEnabled;
    NSObject<OS_dispatch_queue> *_btleQueue;
    struct __SCDynamicStore { } *_btleSCStore;
    unsigned char _btleSeed;
    WPAirPlaySolo *_btleServer;
    unsigned char _btleStarted;
    NSObject<OS_dispatch_source> *_btleTimer;
    int _cloudConnectivityNotifyToken;
    int _conferenceRoomModeNotifyToken;
    AirPlayControllerServer *_controllerServer;
    int _dacpErrorNotifyToken;
    int _dacpNotifyTokens;
    int _lockDownActivationStateToken;
    int _managedDefaultsChangedNotificationToken;
    unsigned char _p2pSolo;
    int _playbackAllowNotifyToken;
    int _playbackPreventNotifyToken;
    unsigned char _playbackPrevented;
    int _prefChangedNotifyToken;
    struct AirPlayReceiverServerPrivate { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; void *x2; id x3; /* Warning: Unrecognized filer type: '?' using 'void*' */ void*x4; void*x5; void *x6; void *x7; int (*x8)(); int (*x9)(); int (*x10)(); int (*x11)(); int (*x12)(); } *_server;
    struct __CFDictionary { } *_soloDevices;
    int _systemBufferSamples;
    int _systemSampleRate;
    int _touchSetupActiveNotifyToken;
    struct AirPlayReceiverUIPrivate { } *_ui;
    unsigned char _voiceForSiri;
    unsigned char _voiceForTelephony;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (readonly) Class superclass;

- (void)_btleStart;
- (long)_btleStartListeningForNetworkChanges;
- (void)_btleStop;
- (void)_btleStopListeningForNetworkChanges;
- (void)_btleUpdate;
- (void)_btleUpdateAdvertisementData;
- (void)airPlaySolo:(id)arg1 failedToStartAdvertisingWithError:(id)arg2;
- (void)airPlaySolo:(id)arg1 failedToStartScanningWithError:(id)arg2;
- (void)airPlaySolo:(id)arg1 foundDevice:(id)arg2 withData:(id)arg3;
- (void)airPlaySoloDidUpdateState:(id)arg1;
- (void)airPlaySoloStartedAdvertising:(id)arg1;
- (void)airPlaySoloStartedScanning:(id)arg1;
- (void)airPlaySoloStoppedAdvertising:(id)arg1;
- (void)airPlaySoloStoppedScanning:(id)arg1;

@end
