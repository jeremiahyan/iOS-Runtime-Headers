/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface GGLImageCanvas : NSObject <MDRenderTarget> {
    BOOL _canMakeImage;
    struct unique_ptr<ggl::TextureBuffer, std::__1::default_delete<ggl::TextureBuffer> > { 
        struct __compressed_pair<ggl::TextureBuffer *, std::__1::default_delete<ggl::TextureBuffer> > { 
            struct TextureBuffer {} *__first_; 
        } __ptr_; 
    } _colorBuffer;
    struct unique_ptr<ggl::Texture2D, std::__1::default_delete<ggl::Texture2D> > { 
        struct __compressed_pair<ggl::Texture2D *, std::__1::default_delete<ggl::Texture2D> > { 
            struct Texture2D {} *__first_; 
        } __ptr_; 
    } _colorTexture;
    float _contentScale;
    struct unique_ptr<ggl::RenderBuffer, std::__1::default_delete<ggl::RenderBuffer> > { 
        struct __compressed_pair<ggl::RenderBuffer *, std::__1::default_delete<ggl::RenderBuffer> > { 
            struct RenderBuffer {} *__first_; 
        } __ptr_; 
    } _depthStencilBuffer;
    struct unique_ptr<ggl::TextureBuffer, std::__1::default_delete<ggl::TextureBuffer> > { 
        struct __compressed_pair<ggl::TextureBuffer *, std::__1::default_delete<ggl::TextureBuffer> > { 
            struct TextureBuffer {} *__first_; 
        } __ptr_; 
    } _flippedColorBuffer;
    struct unique_ptr<ggl::RenderTarget, std::__1::default_delete<ggl::RenderTarget> > { 
        struct __compressed_pair<ggl::RenderTarget *, std::__1::default_delete<ggl::RenderTarget> > { 
            struct RenderTarget {} *__first_; 
        } __ptr_; 
    } _flippedRenderTarget;
    struct unique_ptr<ggl::IOSurfaceTexture, std::__1::default_delete<ggl::IOSurfaceTexture> > { 
        struct __compressed_pair<ggl::IOSurfaceTexture *, std::__1::default_delete<ggl::IOSurfaceTexture> > { 
            struct IOSurfaceTexture {} *__first_; 
        } __ptr_; 
    } _flippedSurfaceTexture;
    struct unique_ptr<ggl::RenderTargetOperation, std::__1::default_delete<ggl::RenderTargetOperation> > { 
        struct __compressed_pair<ggl::RenderTargetOperation *, std::__1::default_delete<ggl::RenderTargetOperation> > { 
            struct RenderTargetOperation {} *__first_; 
        } __ptr_; 
    } _msaaBlitOperation;
    struct unique_ptr<ggl::RenderBuffer, std::__1::default_delete<ggl::RenderBuffer> > { 
        struct __compressed_pair<ggl::RenderBuffer *, std::__1::default_delete<ggl::RenderBuffer> > { 
            struct RenderBuffer {} *__first_; 
        } __ptr_; 
    } _msaaColorBuffer;
    struct unique_ptr<ggl::RenderBuffer, std::__1::default_delete<ggl::RenderBuffer> > { 
        struct __compressed_pair<ggl::RenderBuffer *, std::__1::default_delete<ggl::RenderBuffer> > { 
            struct RenderBuffer {} *__first_; 
        } __ptr_; 
    } _msaaDepthStencilBuffer;
    struct unique_ptr<ggl::RenderTarget, std::__1::default_delete<ggl::RenderTarget> > { 
        struct __compressed_pair<ggl::RenderTarget *, std::__1::default_delete<ggl::RenderTarget> > { 
            struct RenderTarget {} *__first_; 
        } __ptr_; 
    } _msaaRenderTarget;
    BOOL _recreateRenderTarget;
    struct unique_ptr<ggl::RenderTarget, std::__1::default_delete<ggl::RenderTarget> > { 
        struct __compressed_pair<ggl::RenderTarget *, std::__1::default_delete<ggl::RenderTarget> > { 
            struct RenderTarget {} *__first_; 
        } __ptr_; 
    } _renderTarget;
    struct CGSize { 
        float width; 
        float height; 
    } _size;
    BOOL _useMultisampling;
}

@property (nonatomic, readonly) float averageFPS;
@property (nonatomic) float contentScale;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) struct RenderTarget { int (**x1)(); struct ResourceManager {} *x2; struct RenderResource {} *x3; int (**x4)(); char *x5; /* Warning: unhandled struct encoding: '{vector<ggl::FragmentBuffer *' */ struct x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; oneway void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; oneway int x39; void*x40; void*x41; void*x42; void*x43; out void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; unsigned short x78; void*x79; short x80; void*x81; void*x82; void*x83; void*x84; unsigned long x85; int x86; unsigned int x87/* : ? */; const void*x88; const void*x89; void*x90; void*x91; const int x92; void x93; void*x94; void*x95; void*x96; void*x97; const void*x98; void*x99; void*x100; void*x101; out const void*x102; short x103; void*x104; void*x105; void*x106; void*x107; int x108; long x109; void*x110; unsigned char x111; int x112; const BOOL x113; long x114; void*x115; void*x116; float x117; const void*x118; void*x119; void*x120; void*x121; out const void*x122; void*x123; void*x124; void*x125; void*x126; int x127; long x128; void*x129; unsigned char x130; int x131; const BOOL x132; long x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; unsigned long x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; unsigned char x311; void*x312; void*x313; void*x314; void*x315; void*x316; out void*x317; int x318; void*x319; in void*x320; void*x321; void*x322; void*x323; void*x324; struct x325; void*x326; void*x327; void*x328; float x329; void*x330; long x331; void*x332; out void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; float x348; void*x349; long x350; void*x351; out void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; }*finalRenderTarget; /* unknown property attribute:  std::__1::allocator<ggl::FragmentBuffer *> >=^^{FragmentBuffer}}}^{FragmentBuffer}IIB} */
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) struct RenderTargetOperation { int (**x1)(); int x2; }*msaaBlitOperation;
@property (nonatomic, readonly) struct RenderTarget { int (**x1)(); struct ResourceManager {} *x2; struct RenderResource {} *x3; int (**x4)(); char *x5; /* Warning: unhandled struct encoding: '{vector<ggl::FragmentBuffer *' */ struct x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; double x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; struct  struct CGPoint { float x_1_1_1; float x_1_1_2;  {} x34; void*x35; void*x36; void*x37; void*x38; void*x39; short x40; void*x41; const void*x42; BOOL x43; void*x44; void*x45; unsigned char x46; void*x47; unsigned short x48; int x49; void*x50; void*x51; void*x52; struct  float x_2_1_1; float x_2_1_2;  {} x53; void*x54; void*x55; void*x56; void*x57; void*x58; }*msaaRenderTarget; /* unknown property attribute:  std::__1::allocator<ggl::FragmentBuffer *> >=^^{FragmentBuffer}}}^{FragmentBuffer}IIB} */
@property (nonatomic, readonly) struct RenderTarget { int (**x1)(); struct ResourceManager {} *x2; struct RenderResource {} *x3; int (**x4)(); char *x5; /* Warning: unhandled struct encoding: '{vector<ggl::FragmentBuffer *' */ struct x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; unsigned short x17; void*x18; unsigned char x19; out in void*x20; int x21; in void*x22; int x23; void*x24; void*x25; unsigned short x26; BOOL x27; void*x28; in in void*x29; const unsigned char x30; long x31; int x32; void*x33; in void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; unsigned char x58; void*x59; const void*x60; unsigned int x61; in float x62; out void*x63; const void*x64; double x65; int x66; void*x67; in void*x68; unsigned long x69; void*x70; unsigned int x71/* : ? */; void*x72; long x73; void*x74; void*x75; void*x76; void*x77; double x78; long long x79; void*x80; void*x81; BOOL x82; long long x83; void*x84; void*x85; void*x86; union { bool x_87_1_1; bycopy bycopy unsigned long x_87_1_2; } x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; unsigned long x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; BOOL x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; unsigned int x159; void*x160; unsigned short x161; void*x162; short x163; void*x164; void*x165; void*x166; void*x167; unsigned long x168; int x169; unsigned int x170/* : ? */; const void*x171; const void*x172; void*x173; void*x174; const int x175; void x176; void*x177; void*x178; void*x179; void*x180; const void*x181; void*x182; void*x183; void*x184; out const void*x185; short x186; void*x187; void*x188; const out void*x189; out void*x190; void*x191; void*x192; void*x193; void*x194; out out long x195; short x196; void*x197; float x198; const void*x199; void*x200; void*x201; void*x202; out const void*x203; void*x204; void*x205; const out void*x206; out void*x207; void*x208; void*x209; void*x210; void*x211; out out long x212; short x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; BOOL x230; void*x231; void*x232; void*x233; BOOL x234; long long x235; void*x236; void*x237; BOOL x238; void*x239; const const void*x240; in void*x241; oneway int x242; unsigned int x243/* : ? */; const void*x244; void*x245; int x246; out in void*x247; const out void*x248; const void*x249; short x250; short x251; long doublex252; int x253; double x254; unsigned short x255; void*x256; void*x257; const void*x258; void*x259; int x260; void*x261; void*x262; short x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; Class x289; void*x290; void*x291; bycopy void*x292; int x293; long x294; void*x295; unsigned short x296; void*x297; const void x298; void*x299; const unsigned long x300; out BOOL x301; void*x302; long x303; void*x304; const out void*x305; void*x306; bool x307; void*x308; void*x309; BOOL x310; void*x311; unsigned char x312; out in void*x313; void*x314; void*x315; void*x316; void*x317; void*x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; bycopy void*x337; BOOL x338; void*x339; void*x340; void*x341; short x342; long long x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; unsigned long x381; void*x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; void*x411; void*x412; unsigned long x413; void*x414; void*x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; unsigned long x477; void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; void*x501; short x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; void*x513; void*x514; void*x515; void*x516; void*x517; void*x518; void*x519; id x520; void*x521; void*x522; void*x523; void*x524; void*x525; void*x526; id x527; void*x528; void*x529; void*x530; void*x531; void*x532; void*x533; void*x534; void*x535; void*x536; void*x537; void*x538; void*x539; void*x540; void*x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; in void*x558; bycopy void*x559; void*x560; int x561; out in short x562; void*x563; void*x564; short x565; short x566; void*x567; short x568; void*x569; const out void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void*x587; void*x588; void*x589; void*x590; void*x591; void*x592; void*x593; void*x594; void*x595; void*x596; void*x597; void*x598; void*x599; void*x600; void*x601; void*x602; void*x603; void*x604; void*x605; void*x606; void*x607; void*x608; void*x609; void*x610; void*x611; void*x612; void*x613; void*x614; void*x615; void*x616; void*x617; void*x618; void*x619; void*x620; void*x621; void*x622; void*x623; void*x624; void*x625; void*x626; void*x627; void*x628; unsigned long x629; void*x630; void*x631; void*x632; void*x633; void*x634; void*x635; void*x636; void*x637; void*x638; void*x639; void*x640; void*x641; void*x642; void*x643; void*x644; void*x645; void*x646; void*x647; void*x648; void*x649; void*x650; void*x651; void*x652; void*x653; void*x654; void*x655; void*x656; void*x657; void*x658; void*x659; void*x660; unsigned long x661; void*x662; void*x663; void*x664; void*x665; void*x666; void*x667; void*x668; void*x669; void*x670; void*x671; void*x672; void*x673; void*x674; void*x675; void*x676; void*x677; void*x678; void*x679; void*x680; void*x681; void*x682; void*x683; void*x684; void*x685; void*x686; void*x687; void*x688; void*x689; in void*x690; void*x691; void*x692; double x693; void*x694; void*x695; void*x696; int x697; void*x698; in void*x699; void*x700; void*x701; void*x702; void*x703; void*x704; void*x705; void*x706; void*x707; void*x708; void*x709; void*x710; void*x711; void*x712; void*x713; void*x714; void*x715; void*x716; void*x717; void*x718; void*x719; void*x720; void*x721; void*x722; unsigned long x723; void*x724; void*x725; void*x726; void*x727; void*x728; void*x729; void*x730; void*x731; void*x732; void*x733; void*x734; void*x735; void*x736; void*x737; void*x738; void*x739; void*x740; void*x741; void*x742; void*x743; void*x744; void*x745; void*x746; void*x747; void*x748; void*x749; void*x750; void*x751; void*x752; void*x753; void*x754; unsigned long x755; void*x756; void*x757; void*x758; void*x759; void*x760; void*x761; void*x762; void*x763; void*x764; void*x765; void*x766; void*x767; void*x768; void*x769; void*x770; void*x771; void*x772; void*x773; void*x774; void*x775; void*x776; void*x777; void*x778; void*x779; void*x780; void*x781; void*x782; void*x783; void*x784; void*x785; void*x786; void*x787; void*x788; void*x789; void*x790; void*x791; void*x792; void*x793; void*x794; void*x795; void*x796; void*x797; void*x798; void*x799; void*x800; void*x801; void*x802; void*x803; void*x804; void*x805; void*x806; void*x807; void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; unsigned long x819; void*x820; void*x821; void*x822; void*x823; void*x824; void*x825; void*x826; void*x827; void*x828; void*x829; void*x830; void*x831; void*x832; void*x833; void*x834; void*x835; void*x836; void*x837; void*x838; void*x839; void*x840; void*x841; void*x842; void*x843; long long x844; void*x845; void*x846; void*x847; void*x848; void*x849; void*x850; void*x851; void*x852; void*x853; void*x854; void*x855; void*x856; void*x857; void*x858; void*x859; void*x860; void*x861; void*x862; void*x863; void*x864; void*x865; void*x866; void*x867; void*x868; void*x869; void*x870; void*x871; void*x872; void*x873; void*x874; void*x875; void*x876; void*x877; void*x878; void*x879; void*x880; void*x881; void*x882; void*x883; void*x884; void*x885; void*x886; void*x887; void*x888; void*x889; void*x890; void*x891; void*x892; void*x893; void*x894; void*x895; void*x896; void*x897; void*x898; void*x899; void*x900; void*x901; void*x902; void*x903; void*x904; void*x905; void*x906; void*x907; void*x908; void*x909; void*x910; void*x911; void*x912; void*x913; void*x914; void*x915; void*x916; void*x917; void*x918; void*x919; void*x920; void*x921; void*x922; void*x923; void*x924; void*x925; void*x926; void*x927; void*x928; void*x929; void*x930; void*x931; void*x932; void*x933; void*x934; void*x935; void*x936; void*x937; void*x938; void*x939; void*x940; void*x941; void*x942; void*x943; void*x944; void*x945; void*x946; void*x947; void*x948; void*x949; void*x950; void*x951; void*x952; void*x953; void*x954; void*x955; void*x956; void*x957; void*x958; void*x959; void*x960; void*x961; void*x962; void*x963; void*x964; void*x965; void*x966; void*x967; void*x968; void*x969; void*x970; void*x971; void*x972; void*x973; void*x974; void*x975; void*x976; void*x977; void*x978; unsigned long x979; void*x980; void*x981; void*x982; void*x983; void*x984; void*x985; void*x986; void*x987; void*x988; void*x989; void*x990; void*x991; void*x992; void*x993; void*x994; void*x995; void*x996; void*x997; void*x998; void*x999; void*x1000; void*x1001; void*x1002; void*x1003; void*x1004; void*x1005; void*x1006; void*x1007; void*x1008; void*x1009; void*x1010; void*x1011; void*x1012; void*x1013; void*x1014; void*x1015; void*x1016; void*x1017; void*x1018; void*x1019; void*x1020; void*x1021; void*x1022; void*x1023; unsigned long x1024; void*x1025; void*x1026; out void*x1027; out unsigned long x1028; int x1029; unsigned int x1030/* : ? */; const void*x1031; const void*x1032; void*x1033; void*x1034; void*x1035; void*x1036; void*x1037; void*x1038; void*x1039; void*x1040; void*x1041; void*x1042; void*x1043; void*x1044; void*x1045; void*x1046; void*x1047; void*x1048; void*x1049; void*x1050; void*x1051; void*x1052; void*x1053; void*x1054; void*x1055; void*x1056; void*x1057; float x1058; void*x1059; void*x1060; void*x1061; void*x1062; void*x1063; BOOL x1064; void*x1065; void*x1066; void*x1067; void*x1068; void*x1069; void*x1070; void*x1071; void*x1072; void*x1073; void*x1074; void*x1075; void*x1076; void*x1077; void*x1078; void*x1079; void*x1080; void*x1081; void*x1082; bool x1083; unsigned char x1084; out in void*x1085; void*x1086; BOOL x1087; void*x1088; oneway int x1089; void*x1090; void*x1091; unsigned char x1092; out in void*x1093; const out long x1094; long x1095; void*x1096; const void*x1097; void*x1098; void*x1099; void*x1100; void*x1101; void*x1102; void*x1103; void*x1104; void*x1105; void*x1106; void*x1107; void*x1108; void*x1109; void*x1110; void*x1111; void*x1112; void*x1113; void*x1114; BOOL x1115; void*x1116; void*x1117; const double x1118; void*x1119; void*x1120; void*x1121; void*x1122; void*x1123; void*x1124; unsigned long x1125; void*x1126; void*x1127; void*x1128; void*x1129; void*x1130; void*x1131; void*x1132; void*x1133; void*x1134; void*x1135; void*x1136; void*x1137; void*x1138; void*x1139; void*x1140; void*x1141; void*x1142; void*x1143; void*x1144; void*x1145; void*x1146; void*x1147; void*x1148; void*x1149; BOOL x1150; void*x1151; void*x1152; void*x1153; void*x1154; void*x1155; void*x1156; void*x1157; void*x1158; void*x1159; void*x1160; void*x1161; void*x1162; void*x1163; void*x1164; double x1165; long x1166; void*x1167; void*x1168; void*x1169; void*x1170; void*x1171; void*x1172; void*x1173; void*x1174; void*x1175; void*x1176; const double x1177; void*x1178; void*x1179; void*x1180; long long x1181; void*x1182; void*x1183; void*x1184; void*x1185; void*x1186; void*x1187; void*x1188; void*x1189; void*x1190; void*x1191; void*x1192; void*x1193; void*x1194; void*x1195; void*x1196; void*x1197; void*x1198; void*x1199; unsigned short x1200; void*x1201; unsigned int x1202; unsigned char x1203; unsigned short x1204; int x1205; const int x1206; unsigned long x1207; void*x1208; in void*x1209; void*x1210; void*x1211; void*x1212; void*x1213; void*x1214; void*x1215; void*x1216; void*x1217; void*x1218; void*x1219; void*x1220; void*x1221; void*x1222; void*x1223; void*x1224; void*x1225; void*x1226; void*x1227; void*x1228; void*x1229; void*x1230; void*x1231; void*x1232; void*x1233; void*x1234; void*x1235; void*x1236; void*x1237; void*x1238; void*x1239; void*x1240; void*x1241; void*x1242; void*x1243; void*x1244; void*x1245; void*x1246; void*x1247; void*x1248; void*x1249; void*x1250; void*x1251; void*x1252; void*x1253; struct x1254; void*x1255; void*x1256; void*x1257; void*x1258; void*x1259; void*x1260; void*x1261; void*x1262; void*x1263; void*x1264; void*x1265; void*x1266; void*x1267; void*x1268; void*x1269; void*x1270; void*x1271; void*x1272; void*x1273; void*x1274; void*x1275; void*x1276; void*x1277; void*x1278; void*x1279; void*x1280; void*x1281; void*x1282; void*x1283; void*x1284; void*x1285; void*x1286; void*x1287; void*x1288; void*x1289; void*x1290; unsigned long x1291; void*x1292; void*x1293; void*x1294; void*x1295; void*x1296; void*x1297; void*x1298; oneway void*x1299; void*x1300; void*x1301; void*x1302; void*x1303; void*x1304; void*x1305; void*x1306; void*x1307; void*x1308; void*x1309; void*x1310; BOOL x1311; void*x1312; void*x1313; void*x1314; float x1315; void*x1316; void*x1317; void*x1318; void*x1319; void*x1320; void*x1321; void*x1322; void*x1323; void*x1324; void*x1325; void*x1326; void*x1327; void*x1328; void*x1329; void*x1330; void*x1331; void*x1332; SEL x1333; void*x1334; unsigned short x1335; void*x1336; short x1337; void*x1338; void*x1339; void*x1340; void*x1341; unsigned long x1342; int x1343; unsigned int x1344/* : ? */; const void*x1345; const void*x1346; void*x1347; void*x1348; const void*x1349; void*x1350; void*x1351; void*x1352; out const void*x1353; short x1354; void*x1355; void*x1356; out void*x1357; in double x1358; void*x1359; void*x1360; int x1361; out in void*x1362; float x1363; const void*x1364; void*x1365; void*x1366; void*x1367; out const void*x1368; void*x1369; void*x1370; out void*x1371; in double x1372; void*x1373; void*x1374; int x1375; out in void*x1376; void*x1377; void*x1378; void*x1379; void*x1380; void*x1381; void*x1382; void*x1383; void*x1384; void*x1385; void*x1386; void*x1387; void*x1388; void*x1389; void*x1390; void*x1391; void*x1392; void*x1393; void*x1394; void*x1395; void*x1396; void*x1397; void*x1398; void*x1399; void*x1400; void*x1401; void*x1402; void*x1403; void*x1404; void*x1405; void*x1406; void*x1407; void*x1408; void*x1409; void*x1410; void*x1411; void*x1412; void*x1413; void*x1414; void*x1415; void*x1416; void*x1417; void*x1418; void*x1419; void*x1420; void*x1421; void*x1422; long long x1423; void*x1424; short x1425; void*x1426; double x1427; void*x1428; void*x1429; void*x1430; void*x1431; void*x1432; void*x1433; unsigned long x1434; void*x1435; void*x1436; void*x1437; void*x1438; void*x1439; void*x1440; void*x1441; void*x1442; void*x1443; void*x1444; void*x1445; void*x1446; void*x1447; void*x1448; void*x1449; void*x1450; void*x1451; void*x1452; void*x1453; void*x1454; void*x1455; void*x1456; void*x1457; void*x1458; void*x1459; void*x1460; void*x1461; void*x1462; void*x1463; void*x1464; void*x1465; void*x1466; void*x1467; void*x1468; void*x1469; void*x1470; void*x1471; void*x1472; void*x1473; void*x1474; long x1475; long long x1476; void*x1477; void*x1478; void*x1479; void*x1480; void*x1481; void*x1482; void*x1483; void*x1484; void*x1485; void*x1486; void*x1487; void*x1488; void*x1489; void*x1490; void*x1491; void*x1492; void*x1493; void*x1494; void*x1495; void*x1496; void*x1497; void*x1498; void*x1499; void*x1500; void*x1501; void*x1502; void*x1503; void*x1504; void*x1505; void*x1506; void*x1507; void*x1508; void*x1509; void*x1510; void*x1511; void*x1512; void*x1513; unsigned long x1514; void*x1515; void*x1516; void*x1517; void*x1518; void*x1519; void*x1520; void*x1521; void*x1522; void*x1523; void*x1524; void*x1525; void*x1526; void*x1527; void*x1528; void*x1529; void*x1530; void*x1531; void*x1532; void*x1533; void*x1534; void*x1535; void*x1536; void*x1537; void*x1538; void*x1539; void*x1540; void*x1541; void*x1542; void*x1543; void*x1544; void*x1545; void*x1546; void*x1547; void*x1548; void*x1549; void*x1550; void*x1551; void*x1552; void*x1553; void*x1554; void*x1555; void*x1556; void*x1557; void*x1558; unsigned int x1559; void*x1560; void*x1561; void*x1562; int x1563; long x1564; void*x1565; unsigned short x1566; void*x1567; void*x1568; void*x1569; void*x1570; bycopy const void*x1571; void*x1572; in int x1573; void*x1574; void*x1575; const oneway int x1576; void*x1577; void*x1578; unsigned char x1579; out in void*x1580; const out long x1581; long x1582; void*x1583; const void*x1584; void*x1585; void*x1586; double x1587; void*x1588; void*x1589; void*x1590; void*x1591; unsigned long long x1592; void*x1593; void*x1594; void*x1595; void*x1596; void*x1597; void*x1598; void*x1599; void*x1600; void*x1601; double x1602; void*x1603; void*x1604; void*x1605; void*x1606; void*x1607; void*x1608; unsigned short x1609; void*x1610; short x1611; void*x1612; void*x1613; void*x1614; void*x1615; unsigned long x1616; int x1617; unsigned int x1618/* : ? */; const void*x1619; const void*x1620; void*x1621; void*x1622; const void*x1623; void*x1624; void*x1625; void*x1626; out const void*x1627; short x1628; void*x1629; void*x1630; void*x1631; out void*x1632; in double x1633; void*x1634; void*x1635; int x1636; out in void*x1637; float x1638; const void*x1639; void*x1640; void*x1641; void*x1642; out const void*x1643; void*x1644; void*x1645; void*x1646; out void*x1647; in double x1648; void*x1649; void*x1650; int x1651; out in void*x1652; void*x1653; void*x1654; void*x1655; void*x1656; void*x1657; void*x1658; void*x1659; void*x1660; void*x1661; void*x1662; void*x1663; unsigned long long x1664; void*x1665; void*x1666; short x1667; void*x1668; void*x1669; void*x1670; void*x1671; void*x1672; void*x1673; void*x1674; void*x1675; void*x1676; void*x1677; void*x1678; void*x1679; void*x1680; void*x1681; void*x1682; void*x1683; void*x1684; unsigned short x1685; void*x1686; void*x1687; unsigned int x1688/* : ? */; unsigned short x1689; void*x1690; void*x1691; const BOOL x1692; void*x1693; unsigned short x1694; void*x1695; void*x1696; const void*x1697; void*x1698; double x1699; void*x1700; void*x1701; void*x1702; void*x1703; void*x1704; void*x1705; void*x1706; void*x1707; void*x1708; void*x1709; void*x1710; void*x1711; void*x1712; void*x1713; void*x1714; unsigned char x1715; unsigned char x1716; out in void*x1717; const out long x1718; long x1719; void*x1720; const void*x1721; bool x1722; long doublex1723; void*x1724; long x1725; void*x1726; void*x1727; void*x1728; void*x1729; void*x1730; void*x1731; void*x1732; void*x1733; void*x1734; void*x1735; void*x1736; void*x1737; void*x1738; void*x1739; void*x1740; void*x1741; void*x1742; void*x1743; void*x1744; void*x1745; void*x1746; bool x1747; void*x1748; unsigned int x1749/* : ? */; unsigned int x1750/* : ? */; long x1751; void*x1752; unsigned char x1753; out in void*x1754; void*x1755; in void*x1756; oneway int x1757; void*x1758; void*x1759; void*x1760; void*x1761; void*x1762; void*x1763; void*x1764; void*x1765; void*x1766; void*x1767; void*x1768; void*x1769; void*x1770; void*x1771; void*x1772; void*x1773; void*x1774; void*x1775; void*x1776; void*x1777; void*x1778; void*x1779; void*x1780; void*x1781; void*x1782; void*x1783; unsigned char x1784; void*x1785; void*x1786; short x1787; short x1788; int x1789; void*x1790; in void*x1791; out unsigned char x1792; out in void*x1793; void*x1794; BOOL x1795; void*x1796; BOOL x1797; void*x1798; int x1799; void x1800; int x1801; void*x1802; void*x1803; void*x1804; void*x1805; void*x1806; void*x1807; void*x1808; void*x1809; void*x1810; void*x1811; void*x1812; void*x1813; void*x1814; void*x1815; void*x1816; void*x1817; void*x1818; void*x1819; void*x1820; void*x1821; void*x1822; void*x1823; void*x1824; void*x1825; id x1826; unsigned long x1827; out void*x1828; int x1829; in bycopy const unsigned char x1830; const void*x1831; void*x1832; void*x1833; void*x1834; long doublex1835; void*x1836; long x1837; void*x1838; void*x1839; void*x1840; void*x1841; void*x1842; short x1843; void*x1844; void*x1845; long long x1846; void*x1847; void*x1848; short x1849; void*x1850; void*x1851; void*x1852; void*x1853; void*x1854; void*x1855; void*x1856; void*x1857; void*x1858; void*x1859; void*x1860; void*x1861; void*x1862; void*x1863; void*x1864; void*x1865; void*x1866; void*x1867; void*x1868; void*x1869; void*x1870; void*x1871; void*x1872; const void*x1873; int x1874; BOOL x1875; void*x1876; void*x1877; const void*x1878; void*x1879; unsigned int x1880/* : ? */; long x1881; void*x1882; oneway int x1883; void*x1884; void*x1885; unsigned char x1886; void*x1887; long x1888; long x1889; void*x1890; void*x1891; void*x1892; void*x1893; void*x1894; void*x1895; void*x1896; void*x1897; void*x1898; void*x1899; void*x1900; void*x1901; void*x1902; void*x1903; void*x1904; void*x1905; void*x1906; void*x1907; void*x1908; void*x1909; void*x1910; void*x1911; SEL x1912; void*x1913; void*x1914; void*x1915; long doublex1916; void*x1917; void x1918; int x1919; BOOL x1920; void*x1921; unsigned int x1922; in float x1923; out long doublex1924; void*x1925; void*x1926; void*x1927; short x1928; void*x1929; void*x1930; void*x1931; void*x1932; void*x1933; void*x1934; void*x1935; void*x1936; void*x1937; void*x1938; void*x1939; void*x1940; void*x1941; void*x1942; void*x1943; void*x1944; unsigned long long x1945; void*x1946; void*x1947; const void*x1948; void*x1949; long x1950; void*x1951; void*x1952; unsigned int x1953/* : ? */; void*x1954; BOOL x1955; void*x1956; unsigned char x1957; out in void*x1958; void*x1959; void*x1960; void*x1961; void*x1962; void*x1963; void*x1964; void*x1965; void*x1966; void*x1967; void*x1968; void*x1969; void*x1970; void*x1971; void*x1972; void*x1973; unsigned char x1974; out void*x1975; void*x1976; void*x1977; BOOL x1978; void*x1979; double x1980; void*x1981; void*x1982; short x1983; void*x1984; void*x1985; void*x1986; in void*x1987; short x1988; void*x1989; out double x1990; void*x1991; bool x1992; void*x1993; const void*x1994; void*x1995; void*x1996; void*x1997; void*x1998; void*x1999; void*x2000; void*x2001; void*x2002; void*x2003; void*x2004; void*x2005; void*x2006; void*x2007; void*x2008; void*x2009; void*x2010; void*x2011; void*x2012; void*x2013; void*x2014; void*x2015; void*x2016; void*x2017; void*x2018; void*x2019; unsigned int x2020; void*x2021; void*x2022; void*x2023; void*x2024; void*x2025; void*x2026; void*x2027; void*x2028; void*x2029; void*x2030; void*x2031; void*x2032; void*x2033; void*x2034; void*x2035; void*x2036; void*x2037; void*x2038; void*x2039; void*x2040; void*x2041; void*x2042; void*x2043; void*x2044; void*x2045; void*x2046; void*x2047; unsigned long x2048; long doublex2049; void*x2050; void*x2051; void*x2052; out in void*x2053; out unsigned int x2054/* : ? */; void*x2055; void*x2056; void*x2057; void*x2058; void*x2059; void*x2060; void*x2061; void*x2062; void*x2063; void*x2064; void*x2065; void*x2066; void*x2067; void*x2068; void*x2069; void*x2070; void*x2071; void*x2072; void*x2073; void*x2074; void*x2075; void*x2076; void*x2077; void*x2078; unsigned short x2079; void*x2080; void*x2081; BOOL x2082; void*x2083; unsigned int x2084; void*x2085; void*x2086; void*x2087; oneway int x2088; void*x2089; void*x2090; void*x2091; void*x2092; void*x2093; void*x2094; void*x2095; void*x2096; void*x2097; void*x2098; void*x2099; void*x2100; void*x2101; void*x2102; void*x2103; void*x2104; void*x2105; void*x2106; void*x2107; void*x2108; void*x2109; out long x2110; void*x2111; long x2112; int x2113; in void*x2114; void*x2115; void*x2116; void*x2117; void*x2118; void*x2119; void*x2120; void*x2121; void*x2122; void*x2123; void*x2124; void*x2125; void*x2126; void*x2127; void*x2128; void*x2129; void*x2130; void*x2131; void*x2132; void*x2133; void*x2134; void*x2135; void*x2136; void*x2137; bool x2138; void*x2139; out short x2140; void*x2141; void*x2142; long x2143; inout void*x2144; void*x2145; void*x2146; void*x2147; const out void*x2148; void*x2149; unsigned int x2150; void*x2151; void*x2152; void*x2153; void*x2154; void*x2155; void*x2156; void*x2157; void*x2158; void*x2159; void*x2160; void*x2161; void*x2162; void*x2163; void*x2164; void*x2165; void*x2166; void*x2167; void*x2168; long long x2169; void*x2170; void*x2171; short x2172; void*x2173; void*x2174; void*x2175; void*x2176; void*x2177; void*x2178; void*x2179; void*x2180; void*x2181; void*x2182; void*x2183; void*x2184; void*x2185; void*x2186; void*x2187; void*x2188; void*x2189; void*x2190; void*x2191; void*x2192; void*x2193; void*x2194; void*x2195; void*x2196; void*x2197; void*x2198; unsigned int x2199/* : ? */; long doublex2200; void*x2201; void*x2202; void*x2203; unsigned short x2204; out void*x2205; const BOOL x2206; void*x2207; void*x2208; void*x2209; void*x2210; void*x2211; void*x2212; void*x2213; void*x2214; void*x2215; void*x2216; void*x2217; void*x2218; void*x2219; void*x2220; void*x2221; void*x2222; void*x2223; void*x2224; void*x2225; char *x2226; void*x2227; long doublex2228; unsigned short x2229; unsigned short x2230; out BOOL x2231; void*x2232; void*x2233; void*x2234; void*x2235; void*x2236; int x2237; const unsigned short x2238; void*x2239; unsigned short x2240; long doublex2241; void*x2242; long x2243; int x2244; void x2245; void*x2246; const void*x2247; void*x2248; void*x2249; BOOL x2250; void*x2251; int x2252; void*x2253; void*x2254; void*x2255; void*x2256; void*x2257; void*x2258; void*x2259; void*x2260; void*x2261; void*x2262; void*x2263; void*x2264; void*x2265; void*x2266; void*x2267; void*x2268; void*x2269; void*x2270; void*x2271; void*x2272; unsigned short x2273; unsigned char x2274; void*x2275; unsigned char x2276; void*x2277; void*x2278; const void*x2279; void*x2280; void*x2281; void*x2282; void*x2283; long x2284; void*x2285; void*x2286; void*x2287; in void*x2288; short x2289; void*x2290; void*x2291; in double x2292; void*x2293; const void*x2294; const void*x2295; void*x2296; void*x2297; void*x2298; void*x2299; void*x2300; void*x2301; void*x2302; void*x2303; void*x2304; void*x2305; void*x2306; void*x2307; void*x2308; void*x2309; void*x2310; void*x2311; void*x2312; void*x2313; unsigned int x2314; void*x2315; bool x2316; void*x2317; void*x2318; in double x2319; void*x2320; const int x2321; void*x2322; int x2323; in void*x2324; unsigned short x2325; void*x2326; const out void*x2327; void*x2328; void*x2329; out int x2330; in void*x2331; void*x2332; unsigned int x2333; void*x2334; bycopy void*x2335; void*x2336; void*x2337; void*x2338; void*x2339; void*x2340; void*x2341; void*x2342; void*x2343; void*x2344; void*x2345; void*x2346; void*x2347; void*x2348; void*x2349; void*x2350; void*x2351; void*x2352; void*x2353; unsigned long x2354; out BOOL x2355; void*x2356; long x2357; unsigned short x2358; void*x2359; void*x2360; const BOOL x2361; void*x2362; unsigned short x2363; void*x2364; out void*x2365; unsigned long x2366; out BOOL x2367; void*x2368; long x2369; unsigned short x2370; void*x2371; void*x2372; const BOOL x2373; void*x2374; void*x2375; void*x2376; short x2377; void*x2378; long x2379; void*x2380; void*x2381; void*x2382; void*x2383; void*x2384; void*x2385; void*x2386; void*x2387; void*x2388; void*x2389; void*x2390; void*x2391; void*x2392; void*x2393; void*x2394; void*x2395; void*x2396; void*x2397; void*x2398; void*x2399; void*x2400; void*x2401; long doublex2402; const void*x2403; void*x2404; int x2405; in void*x2406; unsigned char x2407; void*x2408; BOOL x2409; void*x2410; void*x2411; void*x2412; void*x2413; void*x2414; void*x2415; void*x2416; void*x2417; void*x2418; void*x2419; void*x2420; void*x2421; void*x2422; void*x2423; void*x2424; void*x2425; unsigned long x2426; out void*x2427; int x2428; in long doublex2429; void*x2430; long x2431; void*x2432; void*x2433; void*x2434; void*x2435; void*x2436; short x2437; void*x2438; void*x2439; long long x2440; void*x2441; void*x2442; short x2443; void*x2444; void*x2445; void*x2446; void*x2447; void*x2448; void*x2449; void*x2450; void*x2451; void*x2452; void*x2453; void*x2454; void*x2455; void*x2456; void*x2457; void*x2458; void*x2459; void*x2460; void*x2461; void*x2462; void*x2463; void*x2464; bool x2465; void*x2466; void*x2467; void*x2468; void*x2469; void*x2470; bool x2471; void*x2472; out short x2473; void*x2474; void*x2475; long x2476; inout void*x2477; void*x2478; void*x2479; unsigned char x2480; out in void*x2481; void*x2482; BOOL x2483; void*x2484; void*x2485; double x2486; int x2487; void*x2488; int x2489; in void*x2490; unsigned char x2491; void*x2492; long x2493; long x2494; void*x2495; void*x2496; void*x2497; void*x2498; void*x2499; void*x2500; void*x2501; void*x2502; void*x2503; void*x2504; void*x2505; void*x2506; void*x2507; void*x2508; void*x2509; BOOL x2510; void*x2511; void*x2512; void*x2513; void*x2514; void*x2515; void*x2516; long long x2517; void*x2518; void*x2519; short x2520; void*x2521; unsigned int x2522; in void*x2523; void*x2524; const in void*x2525; long x2526; void*x2527; void*x2528; void*x2529; void*x2530; void*x2531; void*x2532; void*x2533; void*x2534; void*x2535; void*x2536; void*x2537; void*x2538; void*x2539; void*x2540; void*x2541; void*x2542; void*x2543; unsigned int x2544; void*x2545; const out double x2546; void*x2547; BOOL x2548; void*x2549; void*x2550; void*x2551; void*x2552; void*x2553; unsigned int x2554; in float x2555; out const void*x2556; void*x2557; void*x2558; int x2559; out in oneway int x2560; void*x2561; void*x2562; unsigned char x2563; out in void*x2564; const out long x2565; long x2566; void*x2567; const void*x2568; void*x2569; void*x2570; void*x2571; void*x2572; void*x2573; void*x2574; void*x2575; void*x2576; void*x2577; void*x2578; void*x2579; void*x2580; void*x2581; void*x2582; void*x2583; void*x2584; void*x2585; void*x2586; void*x2587; void*x2588; double x2589; void*x2590; void*x2591; void*x2592; void*x2593; void*x2594; long doublex2595; void*x2596; void x2597; int x2598; BOOL x2599; void*x2600; void*x2601; const out void*x2602; long doublex2603; void*x2604; short x2605; BOOL x2606; long doublex2607; void*x2608; void*x2609; void*x2610; short x2611; void*x2612; void*x2613; void*x2614; void*x2615; void*x2616; void*x2617; void*x2618; void*x2619; void*x2620; void*x2621; void*x2622; void*x2623; void*x2624; void*x2625; void*x2626; void*x2627; void*x2628; void*x2629; void*x2630; void*x2631; void*x2632; void*x2633; void*x2634; short x2635; void*x2636; void*x2637; void*x2638; inout unsigned short x2639; void*x2640; const out void*x2641; void*x2642; const void*x2643; void*x2644; long doublex2645; void*x2646; short x2647; BOOL x2648; const int x2649; void*x2650; void*x2651; int x2652; out in void*x2653; const out void*x2654; void*x2655; void*x2656; void*x2657; void*x2658; void*x2659; void*x2660; void*x2661; void*x2662; void*x2663; void*x2664; void*x2665; void*x2666; void*x2667; void*x2668; void*x2669; void*x2670; void*x2671; void*x2672; void*x2673; BOOL x2674; void*x2675; void*x2676; void*x2677; void*x2678; void*x2679; BOOL x2680; void*x2681; out const void*x2682; double x2683; bycopy unsigned int x2684/* : ? */; void*x2685; void*x2686; BOOL x2687; void*x2688; unsigned long long x2689; void*x2690; void*x2691; const void*x2692; void*x2693; void*x2694; void*x2695; unsigned short x2696; void*x2697; void*x2698; }*renderTarget; /* unknown property attribute:  std::__1::allocator<ggl::FragmentBuffer *> >=^^{FragmentBuffer}}}^{FragmentBuffer}IIB} */
@property (nonatomic) struct CGSize { float x1; float x2; } size;
@property (nonatomic, readonly) struct CGSize { float x1; float x2; } sizeInPixels;
@property (readonly) Class superclass;
@property (nonatomic, readonly) BOOL useMultisampling;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_createMSAARenderTarget;
- (void)_createRenderTarget;
- (void)_destroyMSAARenderTarget;
- (void)_destroyRenderTarget;
- (struct shared_ptr<ggl::BitmapDataBase> { struct BitmapDataBase {} *x1; struct __shared_weak_count {} *x2; })bitmapDataWithRenderer:(struct Renderer { int (**x1)(); struct Device {} *x2; unsigned int x3; unsigned int x4; bool x5; float x6; }*)arg1;
- (float)contentScale;
- (void)didDrawView;
- (struct RenderTarget { int (**x1)(); struct ResourceManager {} *x2; struct RenderResource {} *x3; int (**x4)(); char *x5; struct vector<ggl::FragmentBuffer *, std::__1::allocator<ggl::FragmentBuffer *> > { struct FragmentBuffer {} **x_6_1_1; struct FragmentBuffer {} **x_6_1_2; struct __compressed_pair<ggl::FragmentBuffer **, std::__1::allocator<ggl::FragmentBuffer *> > { struct FragmentBuffer {} **x_3_2_1; } x_6_1_3; } x6; struct FragmentBuffer {} *x7; unsigned int x8; unsigned int x9; bool x10; }*)finalRenderTarget;
- (id)initWithSize:(struct CGSize { float x1; float x2; })arg1 scale:(float)arg2 useMultisampling:(BOOL)arg3;
- (struct RenderTargetOperation { int (**x1)(); int x2; }*)msaaBlitOperation;
- (struct RenderTarget { int (**x1)(); struct ResourceManager {} *x2; struct RenderResource {} *x3; int (**x4)(); char *x5; struct vector<ggl::FragmentBuffer *, std::__1::allocator<ggl::FragmentBuffer *> > { struct FragmentBuffer {} **x_6_1_1; struct FragmentBuffer {} **x_6_1_2; struct __compressed_pair<ggl::FragmentBuffer **, std::__1::allocator<ggl::FragmentBuffer *> > { struct FragmentBuffer {} **x_3_2_1; } x_6_1_3; } x6; struct FragmentBuffer {} *x7; unsigned int x8; unsigned int x9; bool x10; }*)msaaRenderTarget;
- (struct CGImage { }*)newImageWithRenderer:(struct Renderer { int (**x1)(); struct Device {} *x2; unsigned int x3; unsigned int x4; bool x5; float x6; }*)arg1;
- (struct RenderTarget { int (**x1)(); struct ResourceManager {} *x2; struct RenderResource {} *x3; int (**x4)(); char *x5; struct vector<ggl::FragmentBuffer *, std::__1::allocator<ggl::FragmentBuffer *> > { struct FragmentBuffer {} **x_6_1_1; struct FragmentBuffer {} **x_6_1_2; struct __compressed_pair<ggl::FragmentBuffer **, std::__1::allocator<ggl::FragmentBuffer *> > { struct FragmentBuffer {} **x_3_2_1; } x_6_1_3; } x6; struct FragmentBuffer {} *x7; unsigned int x8; unsigned int x9; bool x10; }*)renderTarget;
- (void)setContentScale:(float)arg1;
- (void)setSize:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })size;
- (struct CGSize { float x1; float x2; })sizeInPixels;
- (BOOL)useMultisampling;
- (void)willDrawView;

@end
