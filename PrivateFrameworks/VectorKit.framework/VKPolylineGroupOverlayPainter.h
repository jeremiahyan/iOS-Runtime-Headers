/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKPolylineGroupOverlayPainter : VKOverlayPainter <VKPolylineGroupOverlayObserver> {
    NSMapTable *_polylinesToPainters;
    VKPolylineOverlay *_selectedPolyline;
    BOOL _showTraffic;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (nonatomic, readonly) VKPolylineOverlayPainter *selectedPolylinePainter;
@property (nonatomic) BOOL showTraffic;
@property (readonly) Class superclass;

- (void)_addPainterForOverlay:(id)arg1;
- (void)dealloc;
- (void)gglLayoutWithContext:(id)arg1 commandBuffer:(struct CommandBuffer { int (**x1)(); char *x2; struct RenderQueue {} *x3; struct ClearItem {} *x4; struct vector<ggl::RenderItem *, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_5_1_1; struct RenderItem {} **x_5_1_2; struct __compressed_pair<ggl::RenderItem **, std::__1::allocator<ggl::RenderItem *> > { struct RenderItem {} **x_3_2_1; } x_5_1_3; } x5; struct vector<ggl::Texture2DLoadItem, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_6_1_1; struct Texture2DLoadItem {} *x_6_1_2; struct __compressed_pair<ggl::Texture2DLoadItem *, std::__1::allocator<ggl::Texture2DLoadItem> > { struct Texture2DLoadItem {} *x_3_2_1; } x_6_1_3; } x6; struct vector<ggl::BufferLoadItem, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_7_1_1; struct BufferLoadItem {} *x_7_1_2; struct __compressed_pair<ggl::BufferLoadItem *, std::__1::allocator<ggl::BufferLoadItem> > { struct BufferLoadItem {} *x_3_2_1; } x_7_1_3; } x7; struct deque<geo::fast_shared_ptr<ggl::QueryItem>, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { struct __split_buffer<geo::fast_shared_ptr<ggl::QueryItem> *, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_1; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_2; struct fast_shared_ptr<ggl::QueryItem> {} **x_1_2_3; struct __compressed_pair<geo::fast_shared_ptr<ggl::QueryItem> **, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> *> > { struct fast_shared_ptr<ggl::QueryItem> {} **x_4_3_1; } x_1_2_4; } x_8_1_1; unsigned int x_8_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<geo::fast_shared_ptr<ggl::QueryItem> > > { unsigned long x_3_2_1; } x_8_1_3; } x8; struct deque<ggl::PendingQuery, std::__1::allocator<ggl::PendingQuery> > { struct __split_buffer<ggl::PendingQuery *, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_1_2_1; struct PendingQuery {} **x_1_2_2; struct PendingQuery {} **x_1_2_3; struct __compressed_pair<ggl::PendingQuery **, std::__1::allocator<ggl::PendingQuery *> > { struct PendingQuery {} **x_4_3_1; } x_1_2_4; } x_9_1_1; unsigned int x_9_1_2; struct __compressed_pair<unsigned long, std::__1::allocator<ggl::PendingQuery> > { unsigned long x_3_2_1; } x_9_1_3; } x9; id x10; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; long x23; void*x24; SEL x25; void*x26; SEL x27; void*x28; void*x29; void*x30; out void*x31; long x32; void*x33; void*x34; void*x35; void*x36; void*x37; out void*x38; in void*x39; void*x40; in void*x41; int x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; unsigned int x52/* : ? */; void*x53; long x54; void*x55; void*x56; void*x57; unsigned short x58; void*x59; void*x60; void*x61; const void*x62; out void*x63; void*x64; void*x65; void*x66; void*x67; SEL x68; void*x69; SEL x70; void*x71; unsigned short x72; void*x73; void*x74; void*x75; void*x76; void*x77; double x78; void*x79; void*x80; void*x81; const void*x82; SEL x83; void*x84; SEL x85; void*x86; unsigned short x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; struct x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; short x139; void*x140; void*x141; void*x142; const void*x143; void*x144; void*x145; BOOL x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; const void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; in void*x163; void*x164; void*x165; void*x166; void*x167; double x168; void*x169; void*x170; void*x171; out void*x172; out void*x173; long x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; long x182; void*x183; SEL x184; void*x185; SEL x186; void*x187; void*x188; void*x189; out void*x190; long x191; void*x192; void*x193; void*x194; void*x195; void*x196; out void*x197; in void*x198; void*x199; in void*x200; int x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; unsigned int x211/* : ? */; void*x212; long x213; void*x214; void*x215; void*x216; unsigned short x217; void*x218; void*x219; void*x220; const void*x221; out void*x222; void*x223; void*x224; void*x225; void*x226; SEL x227; void*x228; SEL x229; void*x230; unsigned short x231; void*x232; void*x233; void*x234; void*x235; void*x236; double x237; void*x238; void*x239; void*x240; const void*x241; SEL x242; void*x243; SEL x244; void*x245; unsigned short x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; struct x260; void*x261; }*)arg2 tiles:(id)arg3;
- (id)initWithOverlay:(id)arg1;
- (void)layoutWithContext:(id)arg1 tiles:(id)arg2 keysInView:(id)arg3;
- (void)polylineGroup:(id)arg1 didAddPolyline:(id)arg2;
- (void)polylineGroup:(id)arg1 didRemovePolyline:(id)arg2;
- (void)polylineGroup:(id)arg1 didSelectPolyline:(id)arg2;
- (id)selectedPolylinePainter;
- (void)setApplicationState:(unsigned int)arg1;
- (void)setContainerModel:(id)arg1;
- (void)setShowTraffic:(BOOL)arg1;
- (BOOL)showTraffic;
- (void)stylesheetDidChange;

@end
