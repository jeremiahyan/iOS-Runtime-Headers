/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKGlobeLineContainer : NSObject <VKPolylineGroupOverlayObserver, VKPolylineObserver> {
    <VKGlobeLineContainerDelegate> *_delegate;
    struct GlobeView { int (**x1)(); } *_globeView;
    NSMutableArray *_overlays;
    NSMutableSet *_persistentOverlays;
    struct map<VKPolylineOverlay *, std::__1::weak_ptr<altitude::RouteLineData>, std::__1::less<VKPolylineOverlay *>, std::__1::allocator<std::__1::pair<VKPolylineOverlay *const, std::__1::weak_ptr<altitude::RouteLineData> > > > { 
        struct __tree<std::__1::__value_type<VKPolylineOverlay *, std::__1::weak_ptr<altitude::RouteLineData> >, std::__1::__map_value_compare<VKPolylineOverlay *, std::__1::__value_type<VKPolylineOverlay *, std::__1::weak_ptr<altitude::RouteLineData> >, std::__1::less<VKPolylineOverlay *>, true>, std::__1::allocator<std::__1::__value_type<VKPolylineOverlay *, std::__1::weak_ptr<altitude::RouteLineData> > > > { 
            struct __tree_node<std::__1::__value_type<VKPolylineOverlay *, std::__1::weak_ptr<altitude::RouteLineData> >, void *> {} *__begin_node_; 
            struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<VKPolylineOverlay *, std::__1::weak_ptr<altitude::RouteLineData> >, void *> > > { 
                struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                    struct __tree_node_base<void *> {} *__left_; 
                } __first_; 
            } __pair1_; 
            struct __compressed_pair<unsigned long, std::__1::__map_value_compare<VKPolylineOverlay *, std::__1::__value_type<VKPolylineOverlay *, std::__1::weak_ptr<altitude::RouteLineData> >, std::__1::less<VKPolylineOverlay *>, true> > { 
                unsigned long __first_; 
            } __pair3_; 
        } __tree_; 
    } _polylinesToRoutes;
    <VKRouteMatchedAnnotationPresentation> *_routeLineSplitAnnotation;
    struct VKGlobeRouteSplit { int (**x1)(); id x2; /* Warning: Unrecognized filer type: '' using 'void*' */ void*x3; void*x4; void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; inout void*x26; unsigned short x27; long doublex28; out void*x29; void*x30; int x31; in BOOL x32; BOOL x33; void*x34; short x35; short x36; out const void*x37; void*x38; int x39; long x40; short x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; unsigned int x79/* : ? */; void*x80; float x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; short x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; BOOL x141; void*x142; void*x143; void*x144; long long x145; void*x146; void*x147; void*x148; void*x149; unsigned long x150; void*x151; unsigned int x152/* : ? */; void*x153; long x154; void*x155; int x156; long x157; void*x158; long doublex159; void*x160; BOOL x161; out double x162; void*x163; void*x164; in void*x165; unsigned int x166/* : ? */; long x167; void*x168; double x169; SEL x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; unsigned char x192; void*x193; unsigned short x194; void*x195; short x196; void*x197; void*x198; void*x199; void*x200; unsigned long x201; int x202; unsigned int x203/* : ? */; const void*x204; const void*x205; void*x206; void*x207; const int x208; void x209; void*x210; void*x211; void*x212; void*x213; const void*x214; void*x215; void*x216; void*x217; out const void*x218; short x219; void*x220; int x221; void*x222; out const void*x223; unsigned int x224; void*x225; void*x226; out const void*x227; void*x228; float x229; const void*x230; void*x231; void*x232; void*x233; out const void*x234; void*x235; int x236; void*x237; out const void*x238; unsigned int x239; void*x240; void*x241; out const void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; double x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; void*x294; void*x295; void*x296; void*x297; void*x298; void*x299; void*x300; void*x301; void*x302; void*x303; void*x304; void*x305; void*x306; void*x307; void*x308; void*x309; void*x310; void*x311; void*x312; void*x313; void*x314; void*x315; void*x316; float x317; unsigned long long x318; void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; short x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; int x409; void*x410; void*x411; void*x412; BOOL x413; void*x414; void*x415; void*x416; void*x417; void*x418; long x419; void*x420; int x421; void*x422; void*x423; double x424; void*x425; unsigned short x426; void*x427; out void*x428; inout int x429; void*x430; void*x431; void*x432; unsigned long x433; int x434; void*x435; void*x436; void*x437; SEL x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void x453; in void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; unsigned long x480; void*x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; unsigned long x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; void*x501; void*x502; void*x503; unsigned long x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; void*x513; void*x514; void*x515; void*x516; void*x517; void*x518; void*x519; void*x520; void*x521; void*x522; void*x523; inout void*x524; oneway void*x525; inout void*x526; const out void*x527; out BOOL x528; out long x529; unsigned int x530; void*x531; unsigned short x532; void*x533; BOOL x534; void*x535; void*x536; void*x537; void*x538; void*x539; void*x540; void*x541; void*x542; unsigned long long x543; void x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; void*x561; void*x562; void*x563; void*x564; void*x565; void*x566; void*x567; void*x568; void*x569; int x570; in double x571; void*x572; const void*x573; const int x574; out const int x575; void*x576; void*x577; void*x578; double x579; int x580; void*x581; unsigned int x582; void*x583; void*x584; void*x585; void*x586; void*x587; void*x588; void*x589; void*x590; void*x591; void*x592; void*x593; void*x594; void*x595; void*x596; void*x597; void*x598; void*x599; void*x600; void*x601; void*x602; in void*x603; long x604; void*x605; void*x606; void*x607; void*x608; void*x609; void*x610; void*x611; void*x612; void*x613; void*x614; void*x615; void*x616; void*x617; void*x618; void*x619; void*x620; void*x621; void*x622; void*x623; void*x624; void*x625; void*x626; void*x627; void*x628; void*x629; void*x630; void*x631; void*x632; void*x633; void*x634; void*x635; void*x636; void*x637; int x638; void*x639; void*x640; out void*x641; out void*x642; int x643; void*x644; const void*x645; void*x646; int x647; out in unsigned short x648; void*x649; void*x650; void*x651; out const void*x652; void*x653; void*x654; void*x655; void*x656; void*x657; void x658; void*x659; void*x660; void*x661; void*x662; void*x663; void*x664; bycopy void*x665; long x666; void*x667; BOOL x668; void*x669; unsigned short x670; void*x671; void*x672; const BOOL x673; void*x674; void*x675; void*x676; long long x677; void*x678; void*x679; short x680; void*x681; void*x682; void*x683; void*x684; void*x685; void*x686; void*x687; void x688; void*x689; void*x690; void*x691; void*x692; void*x693; inout const BOOL x694; void*x695; int x696; void x697; void*x698; double x699; unsigned short x700; long x701; int x702; double x703; void*x704; unsigned char x705; out long x706; long x707; void*x708; BOOL x709; void*x710; int x711; out in unsigned short x712; void*x713; long x714; void*x715; BOOL x716; void*x717; int x718; out in void*x719; void*x720; void*x721; void*x722; void*x723; void*x724; void*x725; void*x726; void*x727; void*x728; void*x729; void*x730; void*x731; void*x732; unsigned short x733; void*x734; void*x735; void*x736; oneway void*x737; long x738; void*x739; void*x740; inout int x741; long x742; unsigned short x743; void*x744; void*x745; void*x746; in void*x747; void*x748; void*x749; const void*x750; void*x751; out const void*x752; void*x753; void*x754; void*x755; void*x756; void*x757; void*x758; void*x759; void*x760; void*x761; void*x762; void*x763; void*x764; void*x765; void*x766; void*x767; void*x768; void*x769; void*x770; void*x771; void*x772; void*x773; void*x774; unsigned int x775; void*x776; void*x777; unsigned int x778/* : ? */; long x779; void*x780; oneway int x781; void*x782; void*x783; unsigned char x784; void*x785; long x786; long x787; unsigned long x788; void*x789; void*x790; out void*x791; void*x792; void*x793; void*x794; in void*x795; void*x796; void*x797; const void*x798; void*x799; void*x800; void*x801; void*x802; void*x803; void*x804; void*x805; void*x806; void*x807; void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; unsigned short x819; unsigned long x820; void*x821; void*x822; void*x823; unsigned int x824; void*x825; void*x826; void*x827; void*x828; void*x829; const out void*x830; int x831; short x832; void*x833; void*x834; void*x835; void*x836; void*x837; void*x838; void*x839; void*x840; void*x841; void*x842; void*x843; void*x844; void*x845; void*x846; void*x847; void*x848; unsigned char x849; BOOL x850; void*x851; int x852; out in unsigned short x853; void*x854; void*x855; void*x856; void*x857; unsigned char x858; out in void*x859; const out long x860; long x861; void*x862; const void*x863; void*x864; void*x865; void*x866; void*x867; void*x868; void*x869; void*x870; void*x871; void*x872; void*x873; void*x874; void*x875; void*x876; void*x877; void*x878; void*x879; void*x880; void*x881; void*x882; bool x883; void*x884; void*x885; void*x886; void*x887; void*x888; unsigned char x889; bool x890; int x891; void*x892; const void*x893; void*x894; void*x895; void*x896; unsigned int x897/* : ? */; int x898; void*x899; void*x900; const void*x901; void*x902; void*x903; void*x904; void*x905; void*x906; void*x907; void*x908; void*x909; void*x910; void*x911; void*x912; void*x913; void*x914; void*x915; void*x916; void*x917; void*x918; short x919; int x920; BOOL x921; unsigned long x922; int x923; unsigned int x924/* : ? */; const void*x925; const void*x926; bool x927; const out void*x928; short x929; void*x930; unsigned short x931; void*x932; BOOL x933; void*x934; int x935; out in void*x936; void*x937; void*x938; double x939; void*x940; const oneway int x941; void*x942; void*x943; void*x944; void*x945; void*x946; void*x947; void*x948; void*x949; void*x950; void*x951; void*x952; void*x953; void*x954; void*x955; void*x956; unsigned short x957; oneway void*x958; void*x959; void*x960; void*x961; void*x962; const void*x963; void*x964; void*x965; void*x966; void*x967; void*x968; void*x969; void*x970; void*x971; void*x972; void*x973; void*x974; void*x975; void*x976; void*x977; void*x978; void*x979; void*x980; void*x981; void*x982; short x983; void*x984; void*x985; void*x986; void*x987; long doublex988; void*x989; void*x990; void*x991; BOOL x992; void*x993; void*x994; void*x995; unsigned int x996/* : ? */; void*x997; void*x998; void*x999; void*x1000; out void*x1001; void*x1002; in void*x1003; void*x1004; unsigned long x1005; void*x1006; void*x1007; long long x1008; void*x1009; void*x1010; short x1011; void*x1012; void*x1013; void*x1014; void*x1015; void*x1016; void*x1017; void*x1018; void*x1019; void*x1020; void*x1021; void*x1022; void*x1023; void*x1024; void*x1025; void*x1026; } *_routeSplit;
    struct RouteStyle { float x1; float x2; float x3; struct Color { unsigned char x_4_1_1; unsigned char x_4_1_2; unsigned char x_4_1_3; unsigned char x_4_1_4; } x4; struct Color { unsigned char x_5_1_1; unsigned char x_5_1_2; unsigned char x_5_1_3; unsigned char x_5_1_4; } x5; struct Color { unsigned char x_6_1_1; unsigned char x_6_1_2; unsigned char x_6_1_3; unsigned char x_6_1_4; } x6; struct Color { unsigned char x_7_1_1; unsigned char x_7_1_2; unsigned char x_7_1_3; unsigned char x_7_1_4; } x7; struct Color { unsigned char x_8_1_1; unsigned char x_8_1_2; unsigned char x_8_1_3; unsigned char x_8_1_4; } x8; float x9; float x10; float x11; float x12; float x13; } *_routeStyle;
    VKPolylineOverlay *_selectedPolyline;
    BOOL _trafficEnabled;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <VKGlobeLineContainerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned int hash;
@property (nonatomic, retain) <VKRouteMatchedAnnotationPresentation> *routeLineSplitAnnotation;
@property (readonly) Class superclass;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_recreateLinesIfNeeded;
- (void)_updateRouteSplit;
- (void)addLine:(id)arg1;
- (void)addOverlay:(id)arg1;
- (void)addPersistentOverlay:(id)arg1;
- (void)clearLineSelection;
- (void)dealloc;
- (id)delegate;
- (id)initWithGlobeView:(struct GlobeView { int (**x1)(); }*)arg1 stylesheet:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)overlays;
- (id)persistentOverlays;
- (void)polyline:(id)arg1 selectedSections:(id)arg2 deselectedSections:(id)arg3;
- (void)polylineGroup:(id)arg1 didAddPolyline:(id)arg2;
- (void)polylineGroup:(id)arg1 didRemovePolyline:(id)arg2;
- (void)polylineGroup:(id)arg1 didSelectPolyline:(id)arg2;
- (void)removeLine:(id)arg1;
- (void)removeOverlay:(id)arg1;
- (void)removePersistentOverlay:(id)arg1;
- (id)routeLineSplitAnnotation;
- (void)setDelegate:(id)arg1;
- (void)setNeedsLayoutForPolyline:(id)arg1;
- (void)setRouteLineSplitAnnotation:(id)arg1;
- (void)setSelected:(id)arg1 selected:(BOOL)arg2;
- (void)setStylesheet:(id)arg1;
- (void)setTrafficEnabled:(BOOL)arg1;
- (void)updateWithContext:(id)arg1;

@end
