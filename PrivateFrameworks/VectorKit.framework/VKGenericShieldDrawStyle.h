/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKGenericShieldDrawStyle : VKRenderStyle {
    struct StyleData { struct { unsigned int x_1_1_1 : 1; unsigned int x_1_1_2 : 1; unsigned int x_1_1_3 : 1; unsigned int x_1_1_4 : 1; unsigned int x_1_1_5 : 1; unsigned int x_1_1_6 : 1; unsigned int x_1_1_7 : 1; unsigned int x_1_1_8 : 1; unsigned int x_1_1_9 : 1; unsigned int x_1_1_10 : 1; unsigned int x_1_1_11 : 1; unsigned int x_1_1_12 : 1; unsigned int x_1_1_13 : 1; unsigned int x_1_1_14 : 1; unsigned int x_1_1_15 : 1; unsigned int x_1_1_16 : 1; unsigned int x_1_1_17 : 1; } x1; struct map<gss::PropertyID, signed char, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, signed char> > > { struct __tree<std::__1::__value_type<gss::PropertyID, signed char>, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, signed char>, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, signed char> > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, signed char>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, signed char>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, signed char>, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_2_1_1; } x2; struct map<gss::PropertyID, float, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, float> > > { struct __tree<std::__1::__value_type<gss::PropertyID, float>, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, float>, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, float> > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, float>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, float>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, float>, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_3_1_1; } x3; struct map<gss::PropertyID, unsigned char, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, unsigned char> > > { struct __tree<std::__1::__value_type<gss::PropertyID, unsigned char>, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, unsigned char>, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, unsigned char> > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, unsigned char>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, unsigned char>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, unsigned char>, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_4_1_1; } x4; struct map<gss::PropertyID, int, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, int> > > { struct __tree<std::__1::__value_type<gss::PropertyID, int>, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, int>, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, int> > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, int>, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_5_1_1; } x5; struct map<gss::PropertyID, unsigned int, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, unsigned int> > > { struct __tree<std::__1::__value_type<gss::PropertyID, unsigned int>, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, unsigned int>, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, unsigned int> > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, unsigned int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, unsigned int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, unsigned int>, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_6_1_1; } x6; struct map<gss::PropertyID, gm::Matrix<float, 4, 1>, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, gm::Matrix<float, 4, 1> > > > { struct __tree<std::__1::__value_type<gss::PropertyID, gm::Matrix<float, 4, 1> >, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gm::Matrix<float, 4, 1> >, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, gm::Matrix<float, 4, 1> > > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, gm::Matrix<float, 4, 1> >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, gm::Matrix<float, 4, 1> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gm::Matrix<float, 4, 1> >, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_7_1_1; } x7; struct map<gss::PropertyID, geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> > > > { struct __tree<std::__1::__value_type<gss::PropertyID, geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> >, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> >, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> > > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> >, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_8_1_1; } x8; struct map<gss::PropertyID, gss::StyleDataPair, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, gss::StyleDataPair> > > { struct __tree<std::__1::__value_type<gss::PropertyID, gss::StyleDataPair>, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::StyleDataPair>, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, gss::StyleDataPair> > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, gss::StyleDataPair>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, gss::StyleDataPair>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::StyleDataPair>, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_9_1_1; } x9; struct map<gss::PropertyID, gss::SparseRamp<signed char>, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, gss::SparseRamp<signed char> > > > { struct __tree<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<signed char> >, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<signed char> >, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<signed char> > > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<signed char> >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<signed char> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<signed char> >, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_10_1_1; } x10; struct map<gss::PropertyID, gss::SparseRamp<float>, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, gss::SparseRamp<float> > > > { struct __tree<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<float> >, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<float> >, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<float> > > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<float> >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<float> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<float> >, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_11_1_1; } x11; struct map<gss::PropertyID, gss::SparseRamp<unsigned char>, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, gss::SparseRamp<unsigned char> > > > { struct __tree<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned char> >, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned char> >, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned char> > > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned char> >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned char> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned char> >, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_12_1_1; } x12; struct map<gss::PropertyID, gss::SparseRamp<int>, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, gss::SparseRamp<int> > > > { struct __tree<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<int> >, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<int> >, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<int> > > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<int> >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<int> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<int> >, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_13_1_1; } x13; struct map<gss::PropertyID, gss::SparseRamp<unsigned int>, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, gss::SparseRamp<unsigned int> > > > { struct __tree<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned int> >, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned int> >, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned int> > > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned int> >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned int> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned int> >, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_14_1_1; } x14; struct map<gss::PropertyID, gss::SparseRamp<gm::Matrix<float, 4, 1> >, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, gss::SparseRamp<gm::Matrix<float, 4, 1> > > > > { struct __tree<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gm::Matrix<float, 4, 1> > >, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gm::Matrix<float, 4, 1> > >, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gm::Matrix<float, 4, 1> > > > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gm::Matrix<float, 4, 1> > >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gm::Matrix<float, 4, 1> > >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gm::Matrix<float, 4, 1> > >, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_15_1_1; } x15; struct map<gss::PropertyID, gss::SparseRamp<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> >, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, gss::SparseRamp<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> > > > > { struct __tree<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> > >, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> > >, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> > > > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> > >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> > >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> > >, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_16_1_1; } x16; struct map<gss::PropertyID, gss::SparseRamp<gss::StyleDataPair>, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, gss::SparseRamp<gss::StyleDataPair> > > > { struct __tree<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gss::StyleDataPair> >, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gss::StyleDataPair> >, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gss::StyleDataPair> > > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gss::StyleDataPair> >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gss::StyleDataPair> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gss::StyleDataPair> >, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_17_1_1; } x17; struct map<gss::PropertyID, std::__1::vector<gss::LinePattern, std::__1::allocator<gss::LinePattern> >, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, std::__1::vector<gss::LinePattern, std::__1::allocator<gss::LinePattern> > > > > { struct __tree<std::__1::__value_type<gss::PropertyID, std::__1::vector<gss::LinePattern, std::__1::allocator<gss::LinePattern> > >, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, std::__1::vector<gss::LinePattern, std::__1::allocator<gss::LinePattern> > >, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, std::__1::vector<gss::LinePattern, std::__1::allocator<gss::LinePattern> > > > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, std::__1::vector<gss::LinePattern, std::__1::allocator<gss::LinePattern> > >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, std::__1::vector<gss::LinePattern, std::__1::allocator<gss::LinePattern> > >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, std::__1::vector<gss::LinePattern, std::__1::allocator<gss::LinePattern> > >, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_18_1_1; } x18; struct map<int, gss::StyleData, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, gss::StyleData> > > { struct __tree<std::__1::__value_type<int, gss::StyleData>, std::__1::__map_value_compare<int, std::__1::__value_type<int, gss::StyleData>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, gss::StyleData> > > { struct __tree_node<std::__1::__value_type<int, gss::StyleData>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, gss::StyleData>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, gss::StyleData>, std::__1::less<int>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_19_1_1; } x19; } *_customData;
}

@property (nonatomic, readonly) /* Warning: unhandled struct encoding: '{Matrix<float' */ struct  backgroundColor; /* unknown property attribute:  1>=[4f]} */
@property (nonatomic, readonly) /* Warning: unhandled struct encoding: '{Matrix<float' */ struct  borderColor; /* unknown property attribute:  1>=[4f]} */
@property (nonatomic, readonly) /* Warning: unhandled struct encoding: '{Matrix<float' */ struct  dropShadowColor; /* unknown property attribute:  1>=[4f]} */
@property (nonatomic, readonly) struct CGSize { float x1; float x2; } dropShadowOffset;
@property (nonatomic, readonly) float dropShadowSize;
@property (nonatomic, readonly) /* Warning: unhandled struct encoding: '{Matrix<float' */ struct  haloColor; /* unknown property attribute:  1>=[4f]} */
@property (nonatomic, readonly) float haloSize;
@property (nonatomic, readonly) int style;
@property (nonatomic, readonly) /* Warning: unhandled struct encoding: '{Matrix<float' */ struct  textColor; /* unknown property attribute:  1>=[4f]} */

+ (int)renderStyleID;

- (struct Matrix<float, 4, 1> { float x1[4]; })backgroundColor;
- (struct Matrix<float, 4, 1> { float x1[4]; })borderColor;
- (void)dealloc;
- (struct Matrix<float, 4, 1> { float x1[4]; })dropShadowColor;
- (struct CGSize { float x1; float x2; })dropShadowOffset;
- (float)dropShadowSize;
- (struct Matrix<float, 4, 1> { float x1[4]; })haloColor;
- (float)haloSize;
- (id)initWithStyle:(int)arg1 backgroundColor:(struct Matrix<float, 4, 1> { float x1[4]; })arg2 textColor:(struct Matrix<float, 4, 1> { float x1[4]; })arg3;
- (id)initWithStyleData:(struct StyleData { struct { unsigned int x_1_1_1 : 1; unsigned int x_1_1_2 : 1; unsigned int x_1_1_3 : 1; unsigned int x_1_1_4 : 1; unsigned int x_1_1_5 : 1; unsigned int x_1_1_6 : 1; unsigned int x_1_1_7 : 1; unsigned int x_1_1_8 : 1; unsigned int x_1_1_9 : 1; unsigned int x_1_1_10 : 1; unsigned int x_1_1_11 : 1; unsigned int x_1_1_12 : 1; unsigned int x_1_1_13 : 1; unsigned int x_1_1_14 : 1; unsigned int x_1_1_15 : 1; unsigned int x_1_1_16 : 1; unsigned int x_1_1_17 : 1; } x1; struct map<gss::PropertyID, signed char, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, signed char> > > { struct __tree<std::__1::__value_type<gss::PropertyID, signed char>, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, signed char>, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, signed char> > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, signed char>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, signed char>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, signed char>, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_2_1_1; } x2; struct map<gss::PropertyID, float, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, float> > > { struct __tree<std::__1::__value_type<gss::PropertyID, float>, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, float>, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, float> > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, float>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, float>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, float>, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_3_1_1; } x3; struct map<gss::PropertyID, unsigned char, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, unsigned char> > > { struct __tree<std::__1::__value_type<gss::PropertyID, unsigned char>, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, unsigned char>, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, unsigned char> > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, unsigned char>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, unsigned char>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, unsigned char>, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_4_1_1; } x4; struct map<gss::PropertyID, int, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, int> > > { struct __tree<std::__1::__value_type<gss::PropertyID, int>, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, int>, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, int> > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, int>, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_5_1_1; } x5; struct map<gss::PropertyID, unsigned int, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, unsigned int> > > { struct __tree<std::__1::__value_type<gss::PropertyID, unsigned int>, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, unsigned int>, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, unsigned int> > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, unsigned int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, unsigned int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, unsigned int>, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_6_1_1; } x6; struct map<gss::PropertyID, gm::Matrix<float, 4, 1>, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, gm::Matrix<float, 4, 1> > > > { struct __tree<std::__1::__value_type<gss::PropertyID, gm::Matrix<float, 4, 1> >, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gm::Matrix<float, 4, 1> >, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, gm::Matrix<float, 4, 1> > > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, gm::Matrix<float, 4, 1> >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, gm::Matrix<float, 4, 1> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gm::Matrix<float, 4, 1> >, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_7_1_1; } x7; struct map<gss::PropertyID, geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc>, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> > > > { struct __tree<std::__1::__value_type<gss::PropertyID, geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> >, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> >, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> > > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> >, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_8_1_1; } x8; struct map<gss::PropertyID, gss::StyleDataPair, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, gss::StyleDataPair> > > { struct __tree<std::__1::__value_type<gss::PropertyID, gss::StyleDataPair>, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::StyleDataPair>, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, gss::StyleDataPair> > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, gss::StyleDataPair>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, gss::StyleDataPair>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::StyleDataPair>, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_9_1_1; } x9; struct map<gss::PropertyID, gss::SparseRamp<signed char>, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, gss::SparseRamp<signed char> > > > { struct __tree<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<signed char> >, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<signed char> >, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<signed char> > > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<signed char> >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<signed char> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<signed char> >, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_10_1_1; } x10; struct map<gss::PropertyID, gss::SparseRamp<float>, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, gss::SparseRamp<float> > > > { struct __tree<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<float> >, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<float> >, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<float> > > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<float> >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<float> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<float> >, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_11_1_1; } x11; struct map<gss::PropertyID, gss::SparseRamp<unsigned char>, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, gss::SparseRamp<unsigned char> > > > { struct __tree<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned char> >, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned char> >, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned char> > > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned char> >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned char> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned char> >, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_12_1_1; } x12; struct map<gss::PropertyID, gss::SparseRamp<int>, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, gss::SparseRamp<int> > > > { struct __tree<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<int> >, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<int> >, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<int> > > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<int> >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<int> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<int> >, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_13_1_1; } x13; struct map<gss::PropertyID, gss::SparseRamp<unsigned int>, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, gss::SparseRamp<unsigned int> > > > { struct __tree<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned int> >, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned int> >, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned int> > > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned int> >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned int> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<unsigned int> >, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_14_1_1; } x14; struct map<gss::PropertyID, gss::SparseRamp<gm::Matrix<float, 4, 1> >, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, gss::SparseRamp<gm::Matrix<float, 4, 1> > > > > { struct __tree<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gm::Matrix<float, 4, 1> > >, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gm::Matrix<float, 4, 1> > >, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gm::Matrix<float, 4, 1> > > > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gm::Matrix<float, 4, 1> > >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gm::Matrix<float, 4, 1> > >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gm::Matrix<float, 4, 1> > >, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_15_1_1; } x15; struct map<gss::PropertyID, gss::SparseRamp<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> >, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, gss::SparseRamp<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> > > > > { struct __tree<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> > >, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> > >, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> > > > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> > >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> > >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<geo::_retain_ptr<NSString *, geo::_retain_objc, geo::_release_objc, geo::_hash_objc, geo::_equal_objc> > >, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_16_1_1; } x16; struct map<gss::PropertyID, gss::SparseRamp<gss::StyleDataPair>, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, gss::SparseRamp<gss::StyleDataPair> > > > { struct __tree<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gss::StyleDataPair> >, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gss::StyleDataPair> >, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gss::StyleDataPair> > > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gss::StyleDataPair> >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gss::StyleDataPair> >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, gss::SparseRamp<gss::StyleDataPair> >, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_17_1_1; } x17; struct map<gss::PropertyID, std::__1::vector<gss::LinePattern, std::__1::allocator<gss::LinePattern> >, std::__1::less<gss::PropertyID>, std::__1::allocator<std::__1::pair<const gss::PropertyID, std::__1::vector<gss::LinePattern, std::__1::allocator<gss::LinePattern> > > > > { struct __tree<std::__1::__value_type<gss::PropertyID, std::__1::vector<gss::LinePattern, std::__1::allocator<gss::LinePattern> > >, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, std::__1::vector<gss::LinePattern, std::__1::allocator<gss::LinePattern> > >, std::__1::less<gss::PropertyID>, true>, std::__1::allocator<std::__1::__value_type<gss::PropertyID, std::__1::vector<gss::LinePattern, std::__1::allocator<gss::LinePattern> > > > > { struct __tree_node<std::__1::__value_type<gss::PropertyID, std::__1::vector<gss::LinePattern, std::__1::allocator<gss::LinePattern> > >, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gss::PropertyID, std::__1::vector<gss::LinePattern, std::__1::allocator<gss::LinePattern> > >, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gss::PropertyID, std::__1::__value_type<gss::PropertyID, std::__1::vector<gss::LinePattern, std::__1::allocator<gss::LinePattern> > >, std::__1::less<gss::PropertyID>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_18_1_1; } x18; struct map<int, gss::StyleData, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, gss::StyleData> > > { struct __tree<std::__1::__value_type<int, gss::StyleData>, std::__1::__map_value_compare<int, std::__1::__value_type<int, gss::StyleData>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, gss::StyleData> > > { struct __tree_node<std::__1::__value_type<int, gss::StyleData>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, gss::StyleData>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, gss::StyleData>, std::__1::less<int>, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_19_1_1; } x19; }*)arg1 info:(id)arg2;
- (int)style;
- (struct Matrix<float, 4, 1> { float x1[4]; })textColor;

@end
