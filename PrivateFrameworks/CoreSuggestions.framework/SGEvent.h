/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreSuggestions.framework/CoreSuggestions
 */

@interface SGEvent : NSObject <SGObject> {
    NSDate *_creationDate;
    NSDate *_end;
    NSTimeZone *_endTimeZone;
    NSObject<OS_dispatch_queue> *_geocodeQueue;
    SGEvent *_geocoded;
    BOOL _isAllDay;
    NSDate *_lastModifiedDate;
    NSArray *_locations;
    NSString *_messageId;
    NSString *_notes;
    NSString *_opaqueKey;
    NSDate *_start;
    NSTimeZone *_startTimeZone;
    NSArray *_tags;
    NSString *_title;
}

@property (nonatomic, readonly) NSDate *creationDate;
@property (nonatomic, readonly) NSDate *end;
@property (nonatomic, readonly) NSTimeZone *endTimeZone;
@property (getter=isGeocodeCandidate, nonatomic, readonly) BOOL geocodeCandidate;
@property (nonatomic, readonly) BOOL isAllDay;
@property (nonatomic, readonly) NSDate *lastModifiedDate;
@property (nonatomic, readonly) NSArray *locations;
@property (nonatomic, readonly) NSString *messageId;
@property (nonatomic, readonly) NSString *notes;
@property (nonatomic, readonly) NSString *opaqueKey;
@property (nonatomic, readonly) NSDate *start;
@property (nonatomic, readonly) NSTimeZone *startTimeZone;
@property (nonatomic, readonly) NSArray *tags;
@property (nonatomic, readonly) NSString *title;

+ (id)eventWithOpaqueKey:(id)arg1 title:(id)arg2 notes:(id)arg3 start:(id)arg4 startTimeZone:(id)arg5 end:(id)arg6 endTimeZone:(id)arg7 isAllDay:(BOOL)arg8 creationDate:(id)arg9 lastModifiedDate:(id)arg10 locations:(id)arg11 tags:(id)arg12 messageId:(id)arg13;
+ (BOOL)supportsSecureCoding;

- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)creationDate;
- (id)dateForUTCDate:(id)arg1 withTimeZone:(id)arg2;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)end;
- (id)endTimeZone;
- (id)firstLocationForType:(unsigned int)arg1;
- (void)geocodeLocation:(id)arg1 withCallback:(id /* block */)arg2;
- (void)geocodeWithCallback:(id /* block */)arg1;
- (unsigned int)hash;
- (id)initWithCoder:(id)arg1;
- (id)initWithOpaqueKey:(id)arg1 messageId:(id)arg2 title:(id)arg3 notes:(id)arg4 start:(id)arg5 startTimeZone:(id)arg6 end:(id)arg7 endTimeZone:(id)arg8 isAllDay:(BOOL)arg9 creationDate:(id)arg10 lastModifiedDate:(id)arg11 locations:(id)arg12 tags:(id)arg13;
- (BOOL)isAllDay;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToEvent:(id)arg1;
- (BOOL)isGeocodeCandidate;
- (BOOL)isGeocodeCandidateLocation:(id)arg1;
- (id)lastModifiedDate;
- (id)locations;
- (void)mergeIntoEKEvent:(id)arg1;
- (id)messageId;
- (id)notes;
- (id)opaqueKey;
- (id)start;
- (id)startTimeZone;
- (id)tags;
- (id)title;
- (id)toEKEventWithStore:(id)arg1;

@end
